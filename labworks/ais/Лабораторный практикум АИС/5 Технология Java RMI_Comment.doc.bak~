<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE abiword PUBLIC "-//ABISOURCE//DTD AWML 1.0 Strict//EN" "http://www.abisource.com/awml.dtd">
<abiword template="false" xmlns:ct="http://www.abisource.com/changetracking.dtd" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:math="http://www.w3.org/1998/Math/MathML" xid-max="1138" xmlns:dc="http://purl.org/dc/elements/1.1/" fileformat="1.1" xmlns:svg="http://www.w3.org/2000/svg" xmlns:awml="http://www.abisource.com/awml.dtd" xmlns="http://www.abisource.com/awml.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" version="3.0.0" xml:space="preserve" props="dom-dir:ltr; document-footnote-restart-section:0; document-endnote-type:numeric; document-endnote-place-enddoc:1; document-endnote-initial:1; lang:ru-RU; document-endnote-restart-section:0; document-footnote-restart-page:0; document-footnote-type:numeric; document-footnote-initial:1; document-endnote-place-endsection:0">
<!-- ======================================================================== -->
<!-- This file is an AbiWord document.                                        -->
<!-- AbiWord is a free, Open Source word processor.                           -->
<!-- More information about AbiWord is available at http://www.abisource.com/ -->
<!-- You should not edit this file by hand.                                   -->
<!-- ======================================================================== -->

<metadata>
<m key="abiword.date_last_changed">Sat Nov  5 08:35:25 2016
</m>
<m key="abiword.generator">AbiWord</m>
<m key="dc.date">Sat Nov  5 08:35:25 2016
</m>
<m key="dc.format">application/x-abiword</m>
</metadata>
<rdf>
</rdf>
<styles>
<s type="P" name="Normal" followedby="Normal" props="font-family:Times New Roman; font-size:12pt; dom-dir:ltr; lang:ru-RU; line-height:1.0; orphans:0; text-align:left; widows:0"/>
<s type="P" name="Основной текст" basedon="Normal" followedby="Основной текст" props="font-family:Times New Roman; font-size:12pt; dom-dir:ltr; margin-bottom:6pt; lang:ru-RU; line-height:1.0; orphans:0; text-align:left; widows:0"/>
<s type="P" name="Текст в заданном формате" basedon="Normal" followedby="Текст в заданном формате" props="font-family:DejaVu Sans Mono; font-size:10pt; dom-dir:ltr; lang:ru-RU; line-height:1.0; orphans:0; text-align:left; widows:0"/>
<s type="P" name="Heading 4" basedon="Заголовок" followedby="Основной текст" props="font-family:Times New Roman; dom-dir:ltr; font-weight:bold; lang:ru-RU; margin-top:12pt; text-align:left; orphans:0; keep-with-next:yes; widows:0; margin-bottom:6pt; line-height:1.0; font-size:12pt"/>
<s type="P" name="Заголовок" basedon="Normal" followedby="Основной текст" props="font-family:Arial; dom-dir:ltr; margin-top:12pt; lang:ru-RU; text-align:left; orphans:0; keep-with-next:yes; widows:0; margin-bottom:6pt; line-height:1.0; font-size:14pt"/>
<s type="P" name="Заголовок таблицы" basedon="Содержимое таблицы" followedby="Заголовок таблицы" props="font-family:Times New Roman; font-size:12pt; dom-dir:ltr; lang:ru-RU; font-weight:bold; line-height:1.0; orphans:0; text-align:center; widows:0"/>
<s type="P" name="Название объекта" basedon="Normal" followedby="Название объекта" props="font-family:Times New Roman; dom-dir:ltr; font-style:italic; margin-top:6pt; lang:ru-RU; text-align:left; orphans:0; widows:0; margin-bottom:6pt; line-height:1.0; font-size:12pt"/>
<s type="P" name="Обычная таблица" followedby="Обычная таблица" props="font-family:Times New Roman; font-size:12pt; dom-dir:ltr; lang:ru-RU; font-weight:bold; orphans:0; text-align:left; widows:0"/>
<s type="P" name="Содержимое таблицы" basedon="Normal" followedby="Содержимое таблицы" props="font-family:Times New Roman; font-size:12pt; dom-dir:ltr; lang:ru-RU; line-height:1.0; orphans:0; text-align:left; widows:0"/>
<s type="P" name="Список" basedon="Основной текст" followedby="Список" props="font-family:Times New Roman; font-size:12pt; dom-dir:ltr; margin-bottom:6pt; lang:ru-RU; line-height:1.0; orphans:0; text-align:left; widows:0"/>
<s type="P" name="Указатель1" basedon="Normal" followedby="Указатель1" props="font-family:Times New Roman; font-size:12pt; dom-dir:ltr; lang:ru-RU; line-height:1.0; orphans:0; text-align:left; widows:0"/>
</styles>
<lists>
<l id="1000" parentid="0" type="0" start-value="1" list-delim="%L)" list-decimal="."/>
<l id="1001" parentid="0" type="5" start-value="1" list-delim="%L" list-decimal="."/>
<l id="1002" parentid="0" type="5" start-value="1" list-delim="%L" list-decimal="."/>
<l id="1003" parentid="0" type="5" start-value="1" list-delim="%L" list-decimal="."/>
<l id="1004" parentid="0" type="5" start-value="1" list-delim="%L" list-decimal="."/>
<l id="1005" parentid="0" type="0" start-value="1" list-delim="%L." list-decimal="."/>
</lists>
<pagesize pagetype="A4" orientation="portrait" width="8.267717" height="11.692913" units="in" page-scale="1.000000"/>
<section xid="2" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p style="Normal" xid="3" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Казанский национальный исследовательский технический университет </c></p>
<p style="Normal" xid="4" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">имени А.Н. Туполева</c></p>
<p style="Normal" xid="5" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">____________________________________________________</c></p>
<p style="Normal" xid="6" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Кафедра автоматизированных систем обработки информации и управления</c></p>
<p style="Normal" xid="7" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="8" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="9" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="10" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="11" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="12" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="13" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="14" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="15" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="16" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="17" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="18" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:16pt; font-family:Times New Roman">Методическое руководство к </c></p>
<p style="Normal" xid="19" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:16pt; font-family:Times New Roman">лабораторной работе</c></p>
<p style="Normal" xid="20" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="21" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:20pt; font-family:Times New Roman; font-weight:bold">«Создание распределенной системы </c></p>
<p style="Normal" xid="22" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:20pt; font-family:Times New Roman; font-weight:bold">на основе технологии </c><c props="lang:en-US; font-size:20pt; font-family:Times New Roman; font-weight:bold">Java</c><c props="lang:ru-RU; font-size:20pt; font-family:Times New Roman; font-weight:bold"> RMI»</c></p>
<p style="Normal" xid="23" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="24" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="25" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:16pt; font-family:Times New Roman">по дисциплине</c></p>
<p style="Normal" xid="26" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:16pt; font-family:Times New Roman">“Архитектура информационных систем”</c></p>
<p style="Normal" xid="27" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="28" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="29" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="30" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="31" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="32" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="33" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="34" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="35" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="36" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="37" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="38" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="39" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="40" props="text-align:center; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="41" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Казань 2013</c></p>
<p style="Основной текст" xid="42" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_4" xid="43"/><bookmark type="end" name="id_4" xid="44"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	</c><c props="font-family:Times New Roman; text-decoration:underline; lang:ru-RU; color:000000; font-weight:bold; font-style:italic; font-size:14pt">Цель лабораторной работы</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">: написать распределенное </c><bookmark type="start" name="keyword2" xid="45"/><bookmark type="end" name="keyword2" xid="46"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">приложение с использованием пакета java.net API . </c></p>
<p style="Normal" xid="47" props="text-align:left; line-height:1.0; dom-dir:ltr"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Программное обеспечение</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000">: </c><c props="lang:en-US; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">eclipse</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">(</c><c props="lang:en-US; font-size:8pt; font-family:Tahoma">Eclipse Standard/SDK   Version: Kepler Service Release 1   JavaVersion=1.6</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">).</c></p>
<p style="Основной текст" xid="48" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">В рамках одного распределенного приложения передача данных от одного приложения другому (или от одного компонента другому) включает в себя:</c></p>
<p level="1" listid="1000" parentid="0" style="Основной текст" xid="49" props="widows:0; list-style:Numbered List; orphans:0; tabstops:0.5000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:justify; field-font:Times New Roman"><field type="list_label" xid="50" props="text-decoration:none"></field><c props="text-decoration:none">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">получение данных тем узлом, на котором находится </c><bookmark type="start" name="keyword14" xid="51"/><bookmark type="end" name="keyword14" xid="52"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">приложение</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">-адресат;</c></p>
<p level="1" listid="1000" parentid="0" style="Основной текст" xid="53" props="widows:0; list-style:Numbered List; orphans:0; tabstops:0.5000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:justify; field-font:Times New Roman"><field type="list_label" xid="54" props="text-decoration:none"></field><c props="text-decoration:none">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">получение данных именно тем выполняющимся на узле-адресате приложением, которому они предназначены (одновременно на узле могут выполняться несколько приложений).</c></p>
<p style="Основной текст" xid="55" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Чтобы </c><bookmark type="start" name="keyword30" xid="56"/><bookmark type="end" name="keyword30" xid="57"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">обмен информацией был возможен, каждый элемент системы должен иметь уникальный </c><bookmark type="start" name="keyword31" xid="58"/><bookmark type="end" name="keyword31" xid="59"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">адрес. Фактически, нужно указать два уровня адресации. Каждый </c><bookmark type="start" name="keyword32" xid="60"/><bookmark type="end" name="keyword32" xid="61"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">узел сети должен обладать своим уникальным глобальным сетевым адресом, это позволит доставить данные соответствующему узлу. Каждый процесс (</c><bookmark type="start" name="keyword33" xid="62"/><bookmark type="end" name="keyword33" xid="63"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">компонент) на узле должен иметь </c><bookmark type="start" name="keyword34" xid="64"/><bookmark type="end" name="keyword34" xid="65"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">адрес, который был бы уникальным в пределах этого узла, что даст возможность транспортному протоколу (TCP) доставить данные нужному процессу. Этот </c><bookmark type="start" name="keyword35" xid="66"/><bookmark type="end" name="keyword35" xid="67"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">адрес - </c><bookmark type="start" name="keyword36" xid="68"/><bookmark type="end" name="keyword36" xid="69"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">адрес процесса - в терминологии протоколов семейства TCP/IP называют портом.</c></p>
<p style="Основной текст" xid="70" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_35" xid="71"/><bookmark type="end" name="id_35" xid="72"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Для большинства приложений, выполняющихся в рамках архитектуры протокола TCP/IP, протоколом транспортного уровня выступает TCP. Этот протокол обеспечивает надежное соединение для передачи данных от одного приложения к другому. Протокол также обеспечивает гарантированную доставку сообщений в порядке, соответствующем порядку отправки. В рамках этого подхода программисту предоставляется абстрактный сервис, основанный на использовании потоков. Для передачи данных программист создает TCP-сокет, извлекает из него связанный с ним поток (с сокетом связано два потока - поток ввода и поток вывода) и пишет (читает) данные в поток (из потока). Реализация протокола основана на повторной передаче данных, в случае если истек тайм-аут по ожиданию от получателя подтверждения о приеме.</c></p>
<p style="Основной текст" xid="73" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="74" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">1. Клиент-серверное взаимодействие</c></p>
<p style="Основной текст" xid="75" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="76" props="text-align:left; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="77"></p>
</section>
<section xid="78" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="79"></p>
<p style="Основной текст" xid="80" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Ниже приведена простая программа-клиент, иллюстрирующая использование протокола TCP для организации клиент-серверного взаимодействия на java.net API. </c></p>
<p xid="81"></p>
</section>
<section xid="82" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="83"></p>
<p style="Основной текст" xid="84" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_104" xid="85"/><bookmark type="end" name="id_104" xid="86"/><c props="lang:ru-RU; text-decoration:underline; font-size:14pt; font-family:Times New Roman; color:000000">Классы java.net API:</c></p>
<p level="1" listid="1001" parentid="0" style="Основной текст" xid="87" props="widows:0; list-style:Bullet List; orphans:0; tabstops:0.0000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:NULL"><field type="list_label" xid="88" props="text-decoration:none"></field><bookmark type="start" name="id_105" xid="89"/><bookmark type="end" name="id_105" xid="90"/><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">ServerSocket </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">- сокет на стороне сервера;</c></p>
<p level="1" listid="1001" parentid="0" style="Основной текст" xid="91" props="widows:0; list-style:Bullet List; orphans:0; tabstops:0.0000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:NULL"><field type="list_label" xid="92" props="text-decoration:none"></field><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">Socket </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">- класс для работы с соединением (клиент и сервер). Имеет конструктор для </c><bookmark type="start" name="keyword50" xid="93"/><bookmark type="end" name="keyword50" xid="94"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">создания сокета и соединения с</c><bookmark type="start" name="keyword51" xid="95"/><bookmark type="end" name="keyword51" xid="96"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000"> удаленным узлом и портом, методы для работы с входными и выходными потоками.</c></p>
<p style="Основной текст" xid="97" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="98" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_109" xid="99"/><bookmark type="end" name="id_109" xid="100"/><c props="lang:en-US; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">1.1. TCPClient</c></p>
<p style="Основной текст" xid="101" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="102" props="text-align:left; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="103"></p>
</section>
<section xid="104" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="105"></p>
<p style="Текст в заданном формате" xid="106" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">import java.net.*;</c></p>
<p style="Текст в заданном формате" xid="107" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">import java.io.*;</c></p>
<p style="Текст в заданном формате" xid="108" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">public class TCPClient {</c></p>
<p style="Текст в заданном формате" xid="109" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">public static void main (String arg[]) {</c></p>
<p style="Текст в заданном формате" xid="110" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">Socket s = null;</c></p>
<p style="Текст в заданном формате" xid="111" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">  try {   System.out.println("</c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu; color:000000">Клиент</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu; color:000000">запущен</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">");</c></p>
<p style="Текст в заданном формате" xid="112" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">int serverPort = 7896; String args[]=new String[2];  args[0]="KAI"; args[1]="127.0.0.1"; </c></p>
<p style="Текст в заданном формате" xid="113" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">s = new Socket(args[1], serverPort);</c></p>
<p style="Текст в заданном формате" xid="114" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">DataInputStream in = new DataInputStream( s.getInputStream());</c></p>
<p style="Текст в заданном формате" xid="115" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">DataOutputStream out =new DataOutputStream( s.getOutputStream());</c></p>
<p style="Текст в заданном формате" xid="116" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">out.writeUTF(args[0]); // UTF is a string encoding</c></p>
<p style="Текст в заданном формате" xid="117" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">String data = in.readUTF(); // read a line of data from the stream</c></p>
<p style="Текст в заданном формате" xid="118" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">System.out.println("Received: "+ data) ;</c></p>
<p style="Текст в заданном формате" xid="119" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">} catch (UnknownHostException e) {System.out.println("Socket:" + e.getMessage());</c></p>
<p style="Текст в заданном формате" xid="120" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">} catch (EOFException e) {System.out.println("EOF:" +e.getMessage());</c></p>
<p style="Текст в заданном формате" xid="121" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">} catch (IOException e) {System.out.println("readline:" +e.getMessage()); </c></p>
<p style="Текст в заданном формате" xid="122" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">// error in reading the stream</c></p>
<p style="Текст в заданном формате" xid="123" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">} finally {</c></p>
<p style="Текст в заданном формате" xid="124" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000"> if(s!=null) try {s.close();} catch (IOException e)   {System.out.println("close:" + e.getMessage());}}</c></p>
<p style="Текст в заданном формате" xid="125" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">}</c></p>
<p style="Текст в заданном формате" xid="126" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">}</c></p>
<p style="Основной текст" xid="127" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Листинг</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> 1. </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Клиент</c></p>
<p style="Основной текст" xid="128" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="129" props="text-align:left; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="130"></p>
</section>
<section xid="131" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="132"></p>
<p style="Основной текст" xid="133" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_111" xid="134"/><bookmark type="end" name="id_111" xid="135"/><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">В</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">первых</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">строках</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> (</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">строки</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> 1,2) </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">программы</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">импортируются</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">пакеты</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">java.net</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">и</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">java.io</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> - </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">соответственно</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000">, </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">пакет, содержащий API TCP, и пакет, содержащий классы ввода-вывода. Класс </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">TCPClient </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">имеет единственный метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">main</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, который также является точкой входа в клиентскую программу. 	Метод принимает аргументы (</c><bookmark type="start" name="keyword52" xid="136"/><bookmark type="end" name="keyword52" xid="137"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">аргументы командной строки), первый из которых рассматривается как строка, передаваемая клиентом серверу, второй - как имя (адрес) сервера. Поскольку создание соединения и передача по нему данных сопряжена с возможностью ошибок, остальные действия производятся в блоке </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">try - catch.</c></p>
<p style="Основной текст" xid="138" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_116" xid="139"/><bookmark type="end" name="id_116" xid="140"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Переменная </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">s</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, объявленная в строке 5, инициализируется в строке 8, где создается соединение с сервером. Для соединения требуются два параметра - имя сервера и порт. Имя сервера передается из командной строки, порт известен. В строках 9 и 10 создаются потоки ввода и вывода, с помощью которых можно взаимодействовать с сервером - передавать и принимать данные. В данном случае используются классы </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">DataInputStream </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">и </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">DataOutputStream</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, которые содержат готовые методы чтения/записи для всех </c><bookmark type="start" name="keyword53" xid="141"/><bookmark type="end" name="keyword53" xid="142"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">базовых типов данных Java. Затем производится отправка полученной строки на сервер, после чего клиент ожидает получения информации от сервера (строка 12). Метод чтения данных из потока - блокирующий. Прочитав строку, посланную сервером, клиент печатает ее на экране и завершает работу.</c></p>
<p style="Основной текст" xid="143" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="144" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_133" xid="145"/><bookmark type="end" name="id_133" xid="146"/><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">1. 2. TCPServer</c></p>
<p style="Основной текст" xid="147" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="148" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_136" xid="149"/><bookmark type="end" name="id_136" xid="150"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Как и клиенту, серверу необходима реализация сетевого ввода/вывода, поэтому он импортирует соответствующие пакеты - строки 1,2. Так же как и клиент, сервер состоит из одного метода </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">main</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, выполняющего всю работу и одновременно являющегося точкой </c><bookmark type="start" name="keyword66" xid="151"/><bookmark type="end" name="keyword66" xid="152"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">входа в программу. Первое, что делает сервер - создает серверный сокет (строка 7). Для создания серверного сокета необходим один параметр - порт, на котором сокет будет "слушать" сеть, ожидая клиентских соединений - именно по этому порту клиенты смогут затем соединиться с сервером, и, соответственно, этот порт должен указываться в конструкторах клиентских сокетов, наряду с адресом сервера. В случае если создание серверного сокета прошло успешно, сервер запускает цикл ожидания соединений от клиентов. Внутри цикла ожидания сервер вызывает метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">accept</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">(строка 9) своего серверного сокета. Этот метод является блокирующим, т.е. он возвратит управление только тогда, когда к серверу подсоединится очередной клиент. Можно сказать, что большую часть времени сервер проводит именно в методе </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">accept</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, ожидая соединения клиентов. 	</c></p>
<p style="Основной текст" xid="153" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Текст в заданном формате" xid="154" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">import java.net.*;</c></p>
<p style="Текст в заданном формате" xid="155" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">import java.io.*;</c></p>
<p style="Текст в заданном формате" xid="156" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">public class TCPServer {</c></p>
<p style="Текст в заданном формате" xid="157" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">public static void main (String args[]) {</c></p>
<p style="Текст в заданном формате" xid="158" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">try { System.out.println("</c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu; color:000000">Сервер</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu; color:000000">запущен</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">");</c></p>
<p style="Текст в заданном формате" xid="159" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">int serverPort = 7896; // the server port</c></p>
<p style="Текст в заданном формате" xid="160" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">ServerSocket listenSocket = new ServerSocket (serverPort); // new server port generated</c></p>
<p style="Текст в заданном формате" xid="161" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">while(true) {</c></p>
<p style="Текст в заданном формате" xid="162" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">Socket clientSocket = listenSocket.accept(); // listen for new connection</c></p>
<p style="Текст в заданном формате" xid="163" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">Connection c = new Connection(clientSocket); // launch new thread</c></p>
<p style="Текст в заданном формате" xid="164" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">}</c></p>
<p style="Текст в заданном формате" xid="165" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">} catch(IOException e) { System.out.println("Listen socket:"+e.getMessage());</c></p>
<p style="Текст в заданном формате" xid="166" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu; color:000000">}</c></p>
<p style="Текст в заданном формате" xid="167" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu; color:000000">}</c></p>
<p style="Текст в заданном формате" xid="168" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu; color:000000">}</c></p>
<p style="Основной текст" xid="169" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Листинг 2. Сервер</c></p>
<p style="Основной текст" xid="170" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="171" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">accept</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">возвращает в качестве результата своей работы класс </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">Socket</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, который, наряду с сокетом, созданным на клиенте, представляет собой второй конец соединения. Начиная с этого момента, клиент и сервер могут обмениваться друг с другом данными, используя соответствующие методы потоков, связанных со своими сокетами. Поскольку сервер может одновременно взаимодействовать с несколькими клиентами, создается класс </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">Connection</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, который инкапсулирует в себе всю функциональность обслуживания соответствующего клиента, после чего снова входит в цикл ожидания подсоединения следующего клиента. Следует обратить внимание на тот факт, что использованное API позволяет серверу одновременно обслуживать несколько клиентов, поскольку для каждого клиента после его подсоединения создается собственный канал типа "точка-точка".</c></p>
<p style="Основной текст" xid="172" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="173" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_138" xid="174"/><bookmark type="end" name="id_138" xid="175"/><c props="lang:en-US; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">1.3. </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">Класс</c><c props="lang:en-US; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic"> Connection</c></p>
<p style="Основной текст" xid="176" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="177" props="text-align:left; line-height:1.0; dom-dir:ltr"><c props="bgcolor:ffff00; lang:ru-RU; font-weight:bold; font-size:10pt; font-family:Consolas; color:800080">import</c><c props="bgcolor:ffff00; lang:ru-RU; font-size:10pt; font-family:Consolas; color:000000"> java.net.*;</c></p>
<p style="Normal" xid="178" props="text-align:left; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="bgcolor:ffff00; lang:en-US; font-weight:bold; font-size:10pt; font-family:Consolas; color:800080">import</c><c props="bgcolor:ffff00; lang:en-US; font-size:10pt; font-family:Consolas; color:000000"> java.io.*;</c></p>
<p xid="179"></p>
</section>
<section xid="180" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="181"></p>
<p style="Текст в заданном формате" xid="182" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">class Connection extends Thread {</c></p>
<p style="Текст в заданном формате" xid="183" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">DataInputStream in;</c></p>
<p style="Текст в заданном формате" xid="184" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">DataOutputStream out;</c></p>
<p style="Текст в заданном формате" xid="185" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">Socket clientSocket;</c></p>
<p style="Текст в заданном формате" xid="186" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">public Connection (Socket aClientSocket) {</c></p>
<p style="Текст в заданном формате" xid="187" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">try {</c></p>
<p style="Текст в заданном формате" xid="188" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">clientSocket = aClientSocket;</c></p>
<p style="Текст в заданном формате" xid="189" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">in = new DataInputStream( clientSocket.getInputStream());</c></p>
<p style="Текст в заданном формате" xid="190" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">out = new DataOutputStream( clientSocket.getOutputStream());</c></p>
<p style="Текст в заданном формате" xid="191" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">this.start();</c></p>
<p style="Текст в заданном формате" xid="192" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">} catch(IOException e){System.out.println ("Connection:"+e.getMessage());</c></p>
<p style="Текст в заданном формате" xid="193" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">}</c></p>
<p style="Текст в заданном формате" xid="194" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">}</c></p>
<p style="Текст в заданном формате" xid="195" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">public void run() { // an echo server</c></p>
<p style="Текст в заданном формате" xid="196" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">try {</c></p>
<p style="Текст в заданном формате" xid="197" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">String data = in.readUTF(); // read a line of data from the stream</c></p>
<p style="Текст в заданном формате" xid="198" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">out.writeUTF(data); // write a line to the stream</c></p>
<p style="Текст в заданном формате" xid="199" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">clientSocket.close();</c></p>
<p style="Текст в заданном формате" xid="200" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">} catch (EOFException e){System.out.println ("EOF:"+e.getMessage());</c></p>
<p style="Текст в заданном формате" xid="201" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu; color:000000">} catch (IOException e) {System.out.println ("readline:"+e.getMessage());}</c></p>
<p style="Текст в заданном формате" xid="202" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu; color:000000">}</c></p>
<p style="Текст в заданном формате" xid="203" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu; color:000000">}</c></p>
<p style="Основной текст" xid="204" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Листинг 3. Класс Connection</c></p>
<p style="Основной текст" xid="205" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="206" props="text-align:left; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="207"></p>
</section>
<section xid="208" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="209"></p>
<p style="Основной текст" xid="210" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_140" xid="211"/><bookmark type="end" name="id_140" xid="212"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Класс </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">Connection </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">служит для обслуживания отдельного клиента. Этот класс является потомком класса </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">Thread</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, т.е. является классом-потоком. В конструктор класса передается сокет, который вернул метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">accept</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">серверного сокета, - с его помощью этот класс будет взаимодействовать с клиентом. В конструкторе создаются соответствующие потоки ввода-вывода и запускается поток (поскольку класс сам является потоком, он запускает себя). Все дальнейшие действия по обслуживанию клиента будут производиться в методе </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">run</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">(строки 14-22). Метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">run</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, как правило, представляет собой бесконечный цикл, выход из которого осуществляется либо по ошибке сетевого ввода-вывода, либо по специальной команде, передаваемой клиентом и извещающей сервер об окончании работы. В данном случае класс выполняет только два действия - чтение одной строки с клиента и обратную передачу этой же строки. После выполнения этих действий сокет закрывается, поскольку никаких данных передавать по нему более не предполагается и метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">run</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000"> завершается, что означает завершение потока обслуживания клиента.</c></p>
<p style="Основной текст" xid="213" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="214" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_151" xid="215"/><bookmark type="end" name="id_151" xid="216"/><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">1.4. Запуск приложения</c></p>
<p style="Основной текст" xid="217" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_152" xid="218"/><bookmark type="end" name="id_152" xid="219"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	</c><c props="lang:ru-RU; text-decoration:underline; font-size:14pt; font-family:Times New Roman; color:000000">Первым запускается сервер, он выводит сообщение «Сервер запущен» </c></p>
<p style="Основной текст" xid="220" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; text-decoration:underline; font-size:14pt; font-family:Times New Roman; color:000000">и переходит в </c><bookmark type="start" name="keyword67" xid="221"/><bookmark type="end" name="keyword67" xid="222"/><c props="lang:ru-RU; text-decoration:underline; font-size:14pt; font-family:Times New Roman; color:000000">режим ожидания сообщений от клиента</c><bookmark type="start" name="id_161" xid="223"/><bookmark type="end" name="id_161" xid="224"/><c props="lang:ru-RU; text-decoration:underline; font-size:14pt; font-family:Times New Roman; color:000000">. Затем запускается клиент. В данном случае и клиент, и сервер запущены на одной машине, поэтому в качестве адреса используется адрес 127.0.0.1 ( localhost ). После запуска клиент выводит строку «Клиент запущен», отправляет строку «KAI» на </c><bookmark type="start" name="keyword68" xid="225"/><bookmark type="end" name="keyword68" xid="226"/><c props="lang:ru-RU; text-decoration:underline; font-size:14pt; font-family:Times New Roman; color:000000">сервер, печатает ее в консоли и завершает работу. Сервер продолжает ожидание очередного подключения следующего клиента.</c></p>
<p style="Основной текст" xid="227" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="228" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="229" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="230" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="231" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="232" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="233" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="234" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="235" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="236" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="237" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_5" xid="238"/><bookmark type="end" name="id_5" xid="239"/><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">2. Распределенная система обслуживания пластиковых карт</c></p>
<p style="Основной текст" xid="240" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	В качестве тестовой задачи рассмотрим задачу автоматизации некоторого отдельного контура работы сети столовых: необходимо разработать систему, которая автоматизирует участок работы, связанный с обслуживанием пластиковых карт. По легенде в указанных столовых предусмотрен дополнительный сервис: постоянным клиентам выдают пластиковые карты, при предъявлении которых клиент получает существенную скидку. При этом на карту можно положить некоторую сумму денег и расплачиваться за обеды не наличными, а средствами, находящимися на карте. В целях экономии затрат на эмиссию карты закуплены не чиповые, а штриховые (такая карта несет только код - </c><bookmark type="start" name="keyword3" xid="241"/><bookmark type="end" name="keyword3" xid="242"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">идентификатор клиента). Существенным является то обстоятельство, что карта, выданная в одной столовой, может использоваться в другой столовой. Между столовыми нет устойчивых защищенных каналов связи, в связи с этим встает проблема передачи баланса карт между столовыми. Кроме того, в будущем руководство предполагает изучать предпочтения клиентов, чтобы формировать более гибкую ценовую политику и более рационально управлять ассортиментом предлагаемых блюд.</c></p>
<p style="Основной текст" xid="243" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Рассматриваемая система будет поддерживать ограниченный набор операций:</c></p>
<p level="1" listid="1002" parentid="0" style="Основной текст" xid="244" props="widows:0; list-style:Bullet List; orphans:0; tabstops:0.0000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:NULL"><field type="list_label" xid="245" props="text-decoration:none"></field><bookmark type="start" name="id_8" xid="246"/><bookmark type="end" name="id_8" xid="247"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">операцию выдачи клиенту новой карты;</c></p>
<p level="1" listid="1002" parentid="0" style="Основной текст" xid="248" props="widows:0; list-style:Bullet List; orphans:0; tabstops:0.0000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:NULL"><field type="list_label" xid="249" props="text-decoration:none"></field><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">операцию пополнения счета;</c></p>
<p level="1" listid="1002" parentid="0" style="Основной текст" xid="250" props="widows:0; list-style:Bullet List; orphans:0; tabstops:0.0000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:NULL"><field type="list_label" xid="251" props="text-decoration:none"></field><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">операцию оплаты картой покупки (снятия средств со счета);</c></p>
<p level="1" listid="1002" parentid="0" style="Основной текст" xid="252" props="widows:0; list-style:Bullet List; orphans:0; tabstops:0.0000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:NULL"><field type="list_label" xid="253" props="text-decoration:none"></field><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">операцию получения остатка средств на карте.</c></p>
<p style="Основной текст" xid="254" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_13" xid="255"/><bookmark type="end" name="id_13" xid="256"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Кроме того, практически не будут реализованы механизмы защиты от перерасхода средств, механизмы контроля действий пользователя и т.д., поскольку главной задачей рассматриваемых программ является демонстрация тех или иных механизмов взаимодействия, а не демонстрация реализации соответствующей бизнес-логики.</c></p>
<p style="Основной текст" xid="257" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="258" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="259" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_14" xid="260"/><bookmark type="end" name="id_14" xid="261"/><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">2. 1. Серверные классы</c></p>
<p style="Основной текст" xid="262" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_15" xid="263"/><bookmark type="end" name="id_15" xid="264"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	</c></p>
<p style="Основной текст" xid="265" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Первый серверный класс </c><c props="bgcolor:ffff00; lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">BillingService</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">очень похож на класс </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">TCPServer. </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Он создает серверный сокет, после чего большую часть времени проводит в ожидании соединения клиентов. </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">BillingClientService </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">является потомком класса </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">Thread</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, поэтому после запуска (вызов метода </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">start) </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">начинает обрабатывать клиентский запрос параллельно, в то время как </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">BillingService </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">возвращается к ожиданию соединения со следующим клиентом. Таким образом, предлагаемый класс </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">BillingService </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">способен одновременно обрабатывать соединения с несколькими клиентами.</c></p>
<p style="Основной текст" xid="266" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_16" xid="267"/><bookmark type="end" name="id_16" xid="268"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Поскольку основной задачей системы является выполнение операций по обслуживанию клиентских карт, класс </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">BillingService </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">предлагает соответствующие методы:</c></p>
<p level="1" listid="1003" parentid="0" style="Основной текст" xid="269" props="widows:0; list-style:Bullet List; orphans:0; tabstops:0.0000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:NULL"><field type="list_label" xid="270" props="text-decoration:none"></field><bookmark type="start" name="id_17" xid="271"/><bookmark type="end" name="id_17" xid="272"/><c props="lang:ru-RU; font-weight:bold; font-family:Times New Roman; font-size:14pt; font-style:italic">void addNewCard(String personName, String card)</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">- добавляет в систему новую карту, с идентификатором </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">card</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> и </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">personName</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> - ФИО пользователя;</c></p>
<p level="1" listid="1003" parentid="0" style="Основной текст" xid="273" props="widows:0; list-style:Bullet List; orphans:0; tabstops:0.0000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:NULL"><field type="list_label" xid="274" props="text-decoration:none"></field><c props="lang:ru-RU; font-weight:bold; font-family:Times New Roman; font-size:14pt; font-style:italic">void addMoney(String card, double money)</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">- увеличивает остаток на карте card на величину </c><bookmark type="start" name="keyword4" xid="275"/><bookmark type="end" name="keyword4" xid="276"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">money </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">(пополнение счета);</c></p>
<p level="1" listid="1003" parentid="0" style="Основной текст" xid="277" props="widows:0; list-style:Bullet List; orphans:0; tabstops:0.0000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:NULL"><field type="list_label" xid="278" props="text-decoration:none"></field><c props="lang:ru-RU; font-weight:bold; font-family:Times New Roman; font-size:14pt; font-style:italic">void subMoney(String card, double money)</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">- уменьшает остаток на карте card на величину </c><bookmark type="start" name="keyword5" xid="279"/><bookmark type="end" name="keyword5" xid="280"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">money</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> (оплата картой);</c></p>
<p level="1" listid="1003" parentid="0" style="Основной текст" xid="281" props="widows:0; list-style:Bullet List; orphans:0; tabstops:0.0000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:NULL"><field type="list_label" xid="282" props="text-decoration:none"></field><c props="lang:ru-RU; font-weight:bold; font-family:Times New Roman; font-size:14pt; font-style:italic">double getCardBalance(String card)</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">- для карты с идентификатором card возвращает значение баланса.</c></p>
<p style="Основной текст" xid="283" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_29" xid="284"/><bookmark type="end" name="id_29" xid="285"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Для хранения базы карт применяется </c><bookmark type="start" name="keyword6" xid="286"/><bookmark type="end" name="keyword6" xid="287"/><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">хэш-таблица</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, в которой ключом служит идентификатор карты, в качестве элемента хранения в </c><bookmark type="start" name="keyword2111" xid="288"/><bookmark type="end" name="keyword2111" xid="289"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">хэш-таблице используются экземпляры класса </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">Card </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, а метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">getCard</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">возвращает экземпляр класса </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">Card</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">. Основной цикл </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">run</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">(строки 21-32) сначала создает серверный сокет, затем ожидаются соединения клиентов. При появлении нового клиента создается экземпляр класса </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">BillingClientService </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">(строка 28), который и занимается всем дальнейшим обслуживанием клиента.</c></p>
<p style="Основной текст" xid="290" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Для реализации механизма обмена структурами данных между клиентом и сервером используется  встроенный механизм </c><bookmark type="start" name="keyword181" xid="291"/><bookmark type="end" name="keyword181" xid="292"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">сериализации, </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">при котором</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">по сети передаются не отдельные поля, а целые объекты. В данном случае таких объектов будет два - объект "карта" и объект "операция над картой". Поскольку в примере рассматривается система, выполняющая небольшое число действий, все операции системы можно свести к двум типам - операции, в которых аргументом является карта целиком, и операции, в которых в качестве аргумента выступает начисление/списание средств с карты. К первому типу относятся операции заведения новой карты и операция получения баланса карты, ко второму - операции пополнения баланса и расчета.</c></p>
<p xid="293"></p>
</section>
<section xid="294" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="295"></p>
<p style="Основной текст" xid="296" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_601" xid="297"/><bookmark type="end" name="id_601" xid="298"/><c props="lang:en-US; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">2. 2. </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">Класс</c><c props="lang:en-US; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic"> CardOperation</c></p>
<p style="Основной текст" xid="299" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="300" props="text-align:left; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="301"></p>
</section>
<section xid="302" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="303"></p>
<p style="Текст в заданном формате" xid="304" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c></p>
<p style="Текст в заданном формате" xid="305" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> import java.util.*;</c></p>
<p style="Текст в заданном формате" xid="306" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> import java.io.*;</c></p>
<p style="Текст в заданном формате" xid="307" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Текст в заданном формате" xid="308" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c></p>
<p style="Текст в заданном формате" xid="309" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">public class CardOperation implements Serializable {</c></p>
<p style="Текст в заданном формате" xid="310" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">public CardOperation(String card,double amount,Date operationDate){</c></p>
<p style="Текст в заданном формате" xid="311" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">   this.card = card;</c></p>
<p style="Текст в заданном формате" xid="312" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">   this.amount = amount;</c></p>
<p style="Текст в заданном формате" xid="313" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    this.operationDate = operationDate;</c></p>
<p style="Текст в заданном формате" xid="314" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="315" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public String card;</c></p>
<p style="Текст в заданном формате" xid="316" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">public double amount;</c></p>
<p style="Текст в заданном формате" xid="317" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public Date operationDate;</c></p>
<p style="Текст в заданном формате" xid="318" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">}</c></p>
<p style="Основной текст" xid="319" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Листинг</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> 4. </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Транспортный</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">класс</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> CardOperation</c></p>
<p style="Основной текст" xid="320" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="321" props="text-align:left; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="322"></p>
</section>
<section xid="323" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="324"></p>
<p style="Основной текст" xid="325" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Класс</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:en-US; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">CardOperation </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">объявлен</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">реализующим</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">интерфейс</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:en-US; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">Serializable</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000">. </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Этот интерфейс является </c><c props="lang:ru-RU; text-decoration:underline; font-size:14pt; font-family:Times New Roman; color:000000">тэгирующим</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000"> - он не содержит полей или методов и служит только для того, чтобы сообщить о том, что данный класс сериализуем.</c></p>
<p style="Основной текст" xid="326" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_641" xid="327"/><bookmark type="end" name="id_641" xid="328"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Класс содержит три поля, которые и составляют его полезное наполнение - номер карты, сумма начисляемых/списываемых средств и дата операции.</c></p>
<p style="Основной текст" xid="329" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="330" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="331" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_651" xid="332"/><bookmark type="end" name="id_651" xid="333"/><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">2. 3. Класс Card</c></p>
<p style="Основной текст" xid="334" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_661" xid="335"/><bookmark type="end" name="id_661" xid="336"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	</c></p>
<p style="Основной текст" xid="337" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Второй транспортный класс представляет собой представление карты и выглядит следующим образом.</c></p>
<p xid="338"></p>
</section>
<section xid="339" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="340"></p>
<p style="Текст в заданном формате" xid="341" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Текст в заданном формате" xid="342" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">import java.io.Serializable;</c></p>
<p style="Текст в заданном формате" xid="343" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  import java.util.*;</c></p>
<p style="Текст в заданном формате" xid="344" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Текст в заданном формате" xid="345" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public class Card implements Serializable{</c></p>
<p style="Текст в заданном формате" xid="346" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public Card(String person, Date createDate, String cardNumber,double balance){</c></p>
<p style="Текст в заданном формате" xid="347" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  this.person = person;</c></p>
<p style="Текст в заданном формате" xid="348" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  this.createDate = createDate;</c></p>
<p style="Текст в заданном формате" xid="349" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  this.cardNumber = cardNumber;</c></p>
<p style="Текст в заданном формате" xid="350" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  this.balance = balance;</c></p>
<p style="Текст в заданном формате" xid="351" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="352" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public String person;</c></p>
<p style="Текст в заданном формате" xid="353" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public transient Date createDate;</c></p>
<p style="Текст в заданном формате" xid="354" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public String cardNumber;</c></p>
<p style="Текст в заданном формате" xid="355" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public double balance;</c></p>
<p style="Текст в заданном формате" xid="356" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">public String toString(){</c></p>
<p style="Текст в заданном формате" xid="357" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  </c><c props="lang:en-US; font-size:8pt; font-family:Ubuntu">return "Card: cardNumber="+cardNumber+"\tBalance="+balance+"\tPerson="+person+"\tCreateDate="+createDate+"";</c></p>
<p style="Текст в заданном формате" xid="358" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="359" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Основной текст" xid="360" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Листинг 5. Транспортный класс Card</c></p>
<p style="Основной текст" xid="361" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="362" props="text-align:left; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="363"></p>
</section>
<section xid="364" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="365"></p>
<p style="Основной текст" xid="366" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_681" xid="367"/><bookmark type="end" name="id_681" xid="368"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Поскольку его тоже предстоит передавать по сети, он также объявлен как </c><bookmark type="start" name="keyword191" xid="369"/><bookmark type="end" name="keyword191" xid="370"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">сериализуемый</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000"> и содержит следующие поля: ФИО клиента, дату заведения карты, номер карты и текущий баланс. Для удобства вывода на экран перекрыт метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">toString()</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, который распечатывает значения всех полей класса.</c></p>
<p style="Основной текст" xid="371" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="372" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_711" xid="373"/><bookmark type="end" name="id_711" xid="374"/><c props="lang:en-US; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">2. 4. </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">Класс</c><c props="lang:en-US; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic"> BillingService</c></p>
<p xid="375"></p>
</section>
<section xid="376" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="377"></p>
<p style="Текст в заданном формате" xid="378" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Текст в заданном формате" xid="379" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  </c></p>
<p style="Текст в заданном формате" xid="380" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  import java.net.*;</c></p>
<p style="Текст в заданном формате" xid="381" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  import java.util.Hashtable;</c></p>
<p style="Текст в заданном формате" xid="382" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  import java.io.*;</c></p>
<p style="Текст в заданном формате" xid="383" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  </c></p>
<p style="Текст в заданном формате" xid="384" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public class BillingService extends Thread{</c></p>
<p style="Текст в заданном формате" xid="385" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  private int serverPort = 7896;</c></p>
<p style="Текст в заданном формате" xid="386" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  private ServerSocket ss;</c></p>
<p style="Текст в заданном формате" xid="387" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  private  Hashtable hash;</c></p>
<p style="Текст в заданном формате" xid="388" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  </c></p>
<p style="Текст в заданном формате" xid="389" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public static void main(String[] args) {</c></p>
<p style="Текст в заданном формате" xid="390" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    BillingService bs = new BillingService();</c></p>
<p style="Текст в заданном формате" xid="391" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    bs.start();</c></p>
<p style="Текст в заданном формате" xid="392" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="393" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  </c></p>
<p style="Текст в заданном формате" xid="394" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public BillingService(){</c></p>
<p style="Текст в заданном формате" xid="395" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    hash = new Hashtable();</c></p>
<p style="Текст в заданном формате" xid="396" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="397" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  </c></p>
<p style="Текст в заданном формате" xid="398" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public void run(){</c></p>
<p style="Текст в заданном формате" xid="399" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    try {</c></p>
<p style="Текст в заданном формате" xid="400" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">     ss = new ServerSocket(serverPort);</c></p>
<p style="Текст в заданном формате" xid="401" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">     System.out.println("Server started");</c></p>
<p style="Текст в заданном формате" xid="402" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      while(true){</c></p>
<p style="Текст в заданном формате" xid="403" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">        System.out.println("new client waiting...");</c></p>
<p style="Текст в заданном формате" xid="404" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">        Socket s = ss.accept();</c></p>
<p style="Текст в заданном формате" xid="405" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">       System.out.println("Client accepted");</c></p>
<p style="Текст в заданном формате" xid="406" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">       BillingClientService bcs = new BillingClientService(this,s);</c></p>
<p style="Текст в заданном формате" xid="407" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">        System.out.println("bcs created");</c></p>
<p style="Текст в заданном формате" xid="408" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">        bcs.start();</c></p>
<p style="Текст в заданном формате" xid="409" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      }</c></p>
<p style="Текст в заданном формате" xid="410" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">   } catch (IOException e) {</c></p>
<p style="Текст в заданном формате" xid="411" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">   e.printStackTrace();</c></p>
<p style="Текст в заданном формате" xid="412" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    }</c></p>
<p style="Текст в заданном формате" xid="413" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    </c></p>
<p style="Текст в заданном формате" xid="414" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="415" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Текст в заданном формате" xid="416" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public void addNewCard(Card card) {</c></p>
<p style="Текст в заданном формате" xid="417" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    hash.put(card.cardNumber, card);</c></p>
<p style="Текст в заданном формате" xid="418" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="419" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public void addMoney(String card, double money) {</c></p>
<p style="Текст в заданном формате" xid="420" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">   Card c = (Card)hash.get(card);</c></p>
<p style="Текст в заданном формате" xid="421" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">   if (c==null) {</c></p>
<p style="Текст в заданном формате" xid="422" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">     System.out.println("Bad Card number\n");</c></p>
<p style="Текст в заданном формате" xid="423" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      return;</c></p>
<p style="Текст в заданном формате" xid="424" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">   };</c></p>
<p style="Текст в заданном формате" xid="425" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    c.balance+=money;</c></p>
<p style="Текст в заданном формате" xid="426" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">   hash.put(card,c);</c></p>
<p style="Текст в заданном формате" xid="427" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">}</c></p>
<p style="Текст в заданном формате" xid="428" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public Card getCard(String card){</c></p>
<p style="Текст в заданном формате" xid="429" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">   return (Card)hash.get(card);</c></p>
<p style="Текст в заданном формате" xid="430" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">}</c></p>
<p style="Текст в заданном формате" xid="431" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Основной текст" xid="432" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Листинг</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> 6. </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Серверный</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">класс</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> BillingService</c></p>
<p xid="433"></p>
</section>
<section xid="434" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="435"></p>
<p style="Основной текст" xid="436" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_78" xid="437"/><bookmark type="end" name="id_78" xid="438"/><c props="lang:en-US; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">2. 5. </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">Класс</c><c props="lang:en-US; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic"> BillingClientService</c></p>
<p xid="439"></p>
</section>
<section xid="440" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="441"></p>
<p style="Текст в заданном формате" xid="442" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  </c></p>
<p style="Текст в заданном формате" xid="443" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  import java.io.*;</c></p>
<p style="Текст в заданном формате" xid="444" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  import java.net.*;</c></p>
<p style="Текст в заданном формате" xid="445" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Текст в заданном формате" xid="446" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">public class BillingClientService extends Thread {</c></p>
<p style="Текст в заданном формате" xid="447" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  ObjectInputStream ois;</c></p>
<p style="Текст в заданном формате" xid="448" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">ObjectOutputStream oos;</c></p>
<p style="Текст в заданном формате" xid="449" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">BillingService bs;</c></p>
<p style="Текст в заданном формате" xid="450" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  Socket s;</c></p>
<p style="Текст в заданном формате" xid="451" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  </c></p>
<p style="Текст в заданном формате" xid="452" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">public BillingClientService(BillingService bs,Socket s){</c></p>
<p style="Текст в заданном формате" xid="453" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">   System.out.println("Constructor BillingClientService\n");</c></p>
<p style="Текст в заданном формате" xid="454" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">   this.bs = bs;</c></p>
<p style="Текст в заданном формате" xid="455" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    this.s = s;</c></p>
<p style="Текст в заданном формате" xid="456" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    try {</c></p>
<p style="Текст в заданном формате" xid="457" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">     this.oos = new ObjectOutputStream(s.getOutputStream());</c></p>
<p style="Текст в заданном формате" xid="458" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">     this.ois = new ObjectInputStream(s.getInputStream());</c></p>
<p style="Текст в заданном формате" xid="459" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    } catch (IOException e) {</c></p>
<p style="Текст в заданном формате" xid="460" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      // TODO Auto-generated catch block</c></p>
<p style="Текст в заданном формате" xid="461" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    e.printStackTrace();</c></p>
<p style="Текст в заданном формате" xid="462" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    }</c></p>
<p style="Текст в заданном формате" xid="463" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">   </c></p>
<p style="Текст в заданном формате" xid="464" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    System.out.println("Stream`s done \n socket="+s);</c></p>
<p style="Текст в заданном формате" xid="465" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="466" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public void run(){</c></p>
<p style="Текст в заданном формате" xid="467" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    System.out.println("ClientService thread started\n");</c></p>
<p style="Текст в заданном формате" xid="468" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    boolean work = true;</c></p>
<p style="Текст в заданном формате" xid="469" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    while (work) {</c></p>
<p style="Текст в заданном формате" xid="470" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      int command;</c></p>
<p style="Текст в заданном формате" xid="471" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      Object o;</c></p>
<p style="Текст в заданном формате" xid="472" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      try {</c></p>
<p style="Текст в заданном формате" xid="473" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">        o = ois.readObject();              </c></p>
<p style="Текст в заданном формате" xid="474" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">        if (o instanceof Card[]) {</c></p>
<p style="Текст в заданном формате" xid="475" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">          Card[] cards = (Card[])o;</c></p>
<p style="Текст в заданном формате" xid="476" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">          for (int i=0;i&lt;cards.length;i++){</c></p>
<p style="Текст в заданном формате" xid="477" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">            bs.addNewCard(cards[i]);</c></p>
<p style="Текст в заданном формате" xid="478" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">          }</c></p>
<p style="Текст в заданном формате" xid="479" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">        }else if (o instanceof CardOperation[]){</c></p>
<p style="Текст в заданном формате" xid="480" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">          CardOperation[] co = (CardOperation[])o;</c></p>
<p style="Текст в заданном формате" xid="481" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">          for (int i=0;i&lt;co.length;i++){</c></p>
<p style="Текст в заданном формате" xid="482" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">            bs.addMoney(co[i].card,co[i].amount);</c></p>
<p style="Текст в заданном формате" xid="483" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">          }</c></p>
<p style="Текст в заданном формате" xid="484" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">        }else if (o instanceof String){</c></p>
<p style="Текст в заданном формате" xid="485" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">          oos.writeObject(bs.getCard((String)o)); </c></p>
<p style="Текст в заданном формате" xid="486" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">        }else System.out.println("Bad operation");</c></p>
<p style="Текст в заданном формате" xid="487" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">        </c></p>
<p style="Текст в заданном формате" xid="488" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      } catch (IOException e) {</c></p>
<p style="Текст в заданном формате" xid="489" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">        e.printStackTrace();</c></p>
<p style="Текст в заданном формате" xid="490" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      } catch (ClassNotFoundException e) {</c></p>
<p style="Текст в заданном формате" xid="491" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">        e.printStackTrace();</c></p>
<p style="Текст в заданном формате" xid="492" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      }</c></p>
<p style="Текст в заданном формате" xid="493" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    }</c></p>
<p style="Текст в заданном формате" xid="494" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="495" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Основной текст" xid="496" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Листинг</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> 7. </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Класс</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> BillingClientService</c></p>
<p style="Основной текст" xid="497" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="498" props="text-align:left; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="499"></p>
</section>
<section xid="500" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="501"></p>
<p style="Основной текст" xid="502" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">В</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">качестве</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><bookmark type="start" name="keyword22" xid="503"/><bookmark type="end" name="keyword22" xid="504"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">потоков</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">ввода</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000">-</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">вывода</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">он</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">использует</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000">, </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">соответственно</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000">, </c><c props="lang:en-US; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">ObjectInputStream </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">и</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:en-US; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">ObjectOutputStream</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; color:000000">. </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">Эти высокоуровневые потомки от </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">InputStream </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">и </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">OutputStream </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">предоставляют возможность оперировать с целыми объектами, а не со значениями </c><bookmark type="start" name="keyword23" xid="505"/><bookmark type="end" name="keyword23" xid="506"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">примитивных типов (строки 16,17).</c></p>
<p style="Основной текст" xid="507" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_81" xid="508"/><bookmark type="end" name="id_81" xid="509"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Поскольку класс </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">BillingClientService </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">является потомком </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">Thread</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, вся его функциональность сконцентрирована в методе </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">run</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">. Этот метод представляет собой цикл ожидания сообщений от клиента. При использовании метода </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">readObject()</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">класса </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">ObjectInputStream </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">считывается экземпляр посланного клиентом класса (строка 32). Поскольку неизвестно заранее, какие именно классы прислал клиент (напомним, транспортных классов в нашей системе два - класс карт и класс операций над ними), осуществляется проверка типов (строки 33, 38, 43). Если присланный объект оказался массивом </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">Card</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, то осуществляется его преобразование к этому типу (строка 34), после чего в цикле производится вызов соответствующего метода создания новой карты, в качестве параметра которому передается соответствующий элемент массива, т.е. значение типа </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">Card</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">.</c></p>
<p style="Основной текст" xid="510" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_82" xid="511"/><bookmark type="end" name="id_82" xid="512"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	В случае если присланный объект оказывается массивом </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">CardOperation</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, осуществляется его </c><bookmark type="start" name="keyword24" xid="513"/><bookmark type="end" name="keyword24" xid="514"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">приведение к типу "массив CardOperation* (строка 39) и в цикле вызывается метод изменения баланса.</c></p>
<p style="Основной текст" xid="515" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_83" xid="516"/><bookmark type="end" name="id_83" xid="517"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Если же присланный объект оказался объектом класса </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">String</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, то этот вызов интерпретируется как запрос карты по ее номеру и карта отправляется к клиенту (строка 44).</c></p>
<p style="Основной текст" xid="518" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_84" xid="519"/><bookmark type="end" name="id_84" xid="520"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Стоит обратить внимание на простоту этой операции. Все, что нужно сделать, - вызвать метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">writeObject</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">класса </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">ObjectOutputStream</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">. Поскольку класс </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">Card </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">объявлен как </c><bookmark type="start" name="keyword25" xid="521"/><bookmark type="end" name="keyword25" xid="522"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">сериализуемый, экземпляр этого класса, возвращенный методом </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">getCard</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">класса </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">BillingService</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, будет автоматически упакован, т.е. преобразован в некий служебный формат, который может быть сохранен во внешнем файле, отправлен по сети и т.д. В этом формате будут сохранены все текущие значения полей объекта, а значит, после восстановления мы получим точную копию сохраненного объекта.</c></p>
<p style="Основной текст" xid="523" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Для передачи копии карты клиенту сервер вызывает метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">writeObject</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, а клиент должен прочитать карту соответствующим вызовом </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">readObject</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">. </c></p>
<p style="Основной текст" xid="524" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	При использовании </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">сериализации</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000"> следует отчетливо понимать, что принимающая сторона получает копию объекта, а не сам объект. Так, если сервер передаст клиенту карту с номером "1", а клиент, получив ее, изменит в ней поле баланса, значение баланса у карты "1" на сервере не изменится, поскольку изменения эти произойдут лишь в клиентской копии.</c></p>
<p style="Основной текст" xid="525" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="526" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">2. 6. Класс BillingClient</c></p>
<p style="Основной текст" xid="527" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	</c></p>
<p style="Основной текст" xid="528" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Клиентсоке приложение принимает сетевое имя сервера в качестве </c><bookmark type="start" name="keyword131" xid="529"/><bookmark type="end" name="keyword131" xid="530"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">аргумента командной строки, порт известен заранее. </c><bookmark type="start" name="id_891" xid="531"/><bookmark type="end" name="id_891" xid="532"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">После запуска теста - вызов </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">startTest</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">из метода </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">main</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">(строка 77) - происходит соединение с сервером - </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">connectToServer</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">(строка 18), после чего формируется два массива. Первый массив содержит объекты класса </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">Card </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">(это те карты, которые затем будут переданы на сервер для их заведения), второй - массив из 30000 операций над этими картами. Вызов метода </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">processCard</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">(строка 23) передает на сервер массив карт, вызов </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">processOperation </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">(строка 34) передает на сервер массив операций.</c></p>
<p style="Основной текст" xid="533" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_901" xid="534"/><bookmark type="end" name="id_901" xid="535"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	Для передачи методы </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">processCard</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">и </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">processOperation</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">используют метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">writeObject</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">класса </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">ObjectOutputStream</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">.</c></p>
<p style="Основной текст" xid="536" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_911" xid="537"/><bookmark type="end" name="id_911" xid="538"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">	После того, как соответствующие карты и операции по ним переданы для обработки на сервер, с помощью вызовов метода </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">getCard</c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">с сервера запрашиваются копии соответствующих объектов. Поскольку у класса </c><c props="lang:ru-RU; font-weight:bold; font-size:14pt; font-family:Times New Roman; color:000000">Card </c><bookmark type="start" name="keyword271" xid="539"/><bookmark type="end" name="keyword271" xid="540"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">переопределен метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000; font-style:italic">toString</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; color:000000">, полученные копии могут быть выведены в консоль, что позволяет убедиться в том, что балансы карт действительно изменены в соответствии с переданными операциями.</c></p>
<p xid="541"></p>
</section>
<section xid="542" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="543"></p>
<p style="Основной текст" xid="544" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="545"></p>
</section>
<section xid="546" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="547"></p>
<p style="Текст в заданном формате" xid="548" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  </c></p>
<p style="Текст в заданном формате" xid="549" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  import java.net.*;</c></p>
<p style="Текст в заданном формате" xid="550" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  import java.util.Date;</c></p>
<p style="Текст в заданном формате" xid="551" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  import java.io.*;</c></p>
<p style="Текст в заданном формате" xid="552" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  </c></p>
<p style="Текст в заданном формате" xid="553" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  </c></p>
<p style="Текст в заданном формате" xid="554" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public class BillingClient {</c></p>
<p style="Текст в заданном формате" xid="555" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  </c></p>
<p style="Текст в заданном формате" xid="556" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  int serverPort = 7896;</c></p>
<p style="Текст в заданном формате" xid="557" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  String serverName;</c></p>
<p style="Текст в заданном формате" xid="558" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  Socket s;</c></p>
<p style="Текст в заданном формате" xid="559" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  ObjectInputStream ois;</c></p>
<p style="Текст в заданном формате" xid="560" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  ObjectOutputStream oos;</c></p>
<p style="Текст в заданном формате" xid="561" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public BillingClient(String serverName){</c></p>
<p style="Текст в заданном формате" xid="562" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    this.serverName = serverName;</c></p>
<p style="Текст в заданном формате" xid="563" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="564" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public void startTest() throws IOException{</c></p>
<p style="Текст в заданном формате" xid="565" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    connectToServer();</c></p>
<p style="Текст в заданном формате" xid="566" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">          </c></p>
<p style="Текст в заданном формате" xid="567" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    Card[] cards = {new Card("Piter",new Date(),"1",0.0),</c></p>
<p style="Текст в заданном формате" xid="568" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">            new Card("Stefan",new Date(),"2",0.0),</c></p>
<p style="Текст в заданном формате" xid="569" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">            new Card("Nataly",new Date(),"3",0.0)};</c></p>
<p style="Текст в заданном формате" xid="570" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    processCard(cards);</c></p>
<p style="Текст в заданном формате" xid="571" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    </c></p>
<p style="Текст в заданном формате" xid="572" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    int cnt = 30000;</c></p>
<p style="Текст в заданном формате" xid="573" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    CardOperation[] co = new CardOperation[cnt];</c></p>
<p style="Текст в заданном формате" xid="574" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    for (int i = 0; i &lt; cnt; i++) {</c></p>
<p style="Текст в заданном формате" xid="575" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      switch (i%3){</c></p>
<p style="Текст в заданном формате" xid="576" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      case 0:  co[i] = new CardOperation("1",1,new Date());break;</c></p>
<p style="Текст в заданном формате" xid="577" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      case 1:  co[i] = new CardOperation("2",2,new Date());break;</c></p>
<p style="Текст в заданном формате" xid="578" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      case 2: co[i] = new CardOperation("3",3,new Date());break;</c></p>
<p style="Текст в заданном формате" xid="579" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      }</c></p>
<p style="Текст в заданном формате" xid="580" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    }</c></p>
<p style="Текст в заданном формате" xid="581" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    processOperation(co);</c></p>
<p style="Текст в заданном формате" xid="582" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    try {</c></p>
<p style="Текст в заданном формате" xid="583" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      System.out.println("getCard: "+getCard("1"));</c></p>
<p style="Текст в заданном формате" xid="584" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      System.out.println("getCard: "+getCard("2"));</c></p>
<p style="Текст в заданном формате" xid="585" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      System.out.println("getCard: "+getCard("3"));</c></p>
<p style="Текст в заданном формате" xid="586" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    } catch (IOException e1) {</c></p>
<p style="Текст в заданном формате" xid="587" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      e1.printStackTrace();</c></p>
<p style="Текст в заданном формате" xid="588" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    } catch (ClassNotFoundException e1) {</c></p>
<p style="Текст в заданном формате" xid="589" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      e1.printStackTrace();</c></p>
<p style="Текст в заданном формате" xid="590" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    }</c></p>
<p style="Текст в заданном формате" xid="591" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    </c></p>
<p style="Текст в заданном формате" xid="592" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    java.lang.Object sync = new java.lang.Object();</c></p>
<p style="Текст в заданном формате" xid="593" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    synchronized (sync) {</c></p>
<p style="Текст в заданном формате" xid="594" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      try {</c></p>
<p style="Текст в заданном формате" xid="595" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">        sync.wait();</c></p>
<p style="Текст в заданном формате" xid="596" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      } catch (InterruptedException e) {</c></p>
<p style="Текст в заданном формате" xid="597" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">        e.printStackTrace();</c></p>
<p style="Текст в заданном формате" xid="598" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      }</c></p>
<p style="Текст в заданном формате" xid="599" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    }</c></p>
<p style="Текст в заданном формате" xid="600" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    </c></p>
<p style="Текст в заданном формате" xid="601" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="602" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  void connectToServer() throws UnknownHostException, IOException{</c></p>
<p style="Текст в заданном формате" xid="603" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    s = new Socket(serverName, serverPort);</c></p>
<p style="Текст в заданном формате" xid="604" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    System.out.println("connection established\n");</c></p>
<p style="Текст в заданном формате" xid="605" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    ois = new ObjectInputStream(s.getInputStream());</c></p>
<p style="Текст в заданном формате" xid="606" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    oos = new ObjectOutputStream(s.getOutputStream());</c></p>
<p style="Текст в заданном формате" xid="607" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    System.out.println("Stream`s done \n ois="+ois+"\n oos="+oos);</c></p>
<p style="Текст в заданном формате" xid="608" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="609" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  void processOperation(CardOperation[] co) throws IOException{</c></p>
<p style="Текст в заданном формате" xid="610" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    System.out.println(co);</c></p>
<p style="Текст в заданном формате" xid="611" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    oos.writeObject(co);</c></p>
<p style="Текст в заданном формате" xid="612" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="613" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  void processCard(Card[] c) throws IOException{</c></p>
<p style="Текст в заданном формате" xid="614" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    System.out.println("processCard: c="+c);</c></p>
<p style="Текст в заданном формате" xid="615" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    oos.writeObject(c);</c></p>
<p style="Текст в заданном формате" xid="616" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="617" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  Card getCard(String card) throws IOException, ClassNotFoundException{</c></p>
<p style="Текст в заданном формате" xid="618" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    oos.writeObject(card);</c></p>
<p style="Текст в заданном формате" xid="619" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    return (Card)ois.readObject();</c></p>
<p style="Текст в заданном формате" xid="620" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="621" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public static void main(String[] args) throws Exception{</c></p>
<p style="Текст в заданном формате" xid="622" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    BillingClient bc = new BillingClient(</c><c props="lang:en-US; font-size:10pt; font-family:Times New Roman">“localhost”</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">);</c></p>
<p style="Текст в заданном формате" xid="623" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    try {</c></p>
<p style="Текст в заданном формате" xid="624" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">      bc.startTest();</c></p>
<p style="Текст в заданном формате" xid="625" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">    } catch (IOException e) {</c></p>
<p style="Текст в заданном формате" xid="626" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">      e.printStackTrace();</c></p>
<p style="Текст в заданном формате" xid="627" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">    }</c></p>
<p style="Текст в заданном формате" xid="628" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Текст в заданном формате" xid="629" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">  }</c></p>
<p style="Основной текст" xid="630" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Листинг 8. Класс BillingClient</c></p>
<p style="Основной текст" xid="631" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="632" props="text-align:left; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="633"></p>
</section>
<section xid="634" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="635"></p>
<p style="Основной текст" xid="636" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">3. Создание распределенной системы с помощью RMI</c></p>
<p style="Основной текст" xid="637" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="638" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_7" xid="639"/><bookmark type="start" name="keyword37" xid="640"/><bookmark type="end" name="id_7" xid="641"/><bookmark type="end" name="keyword37" xid="642"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Технология RMI дает возможность выполнять объекты Java на различных компьютерах или в отдельных процессах путем взаимодействия их друг с другом посредством удаленных вызовов методов. Технология </c><bookmark type="start" name="keyword41" xid="643"/><bookmark type="end" name="keyword41" xid="644"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">RMI основана на более ранней подобной технологии удаленного вызова процедур ( RPC ) для </c><bookmark type="start" name="keyword54" xid="645"/><bookmark type="end" name="keyword54" xid="646"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">процедурного программирования, разработанной в 80-х годах. RPC позволяет процедуре вызывать функцию на другом компьютере столь же легко, как если бы эта </c><bookmark type="start" name="keyword61" xid="647"/><bookmark type="end" name="keyword61" xid="648"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">функция была частью программы, выполняющейся на том же компьютере. RPC выполняет всю работу по организации сетевых взаимодействий и маршалинга данных - пакетирования параметров функций и возврата значений для передачи их через </c><bookmark type="start" name="keyword7" xid="649"/><bookmark type="end" name="keyword7" xid="650"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">сеть). Но RPC не подходит для передачи и возврата объектов Java, потому что она поддерживает ограниченный набор простых типов данных. Другой недостаток RPC заключается в том, что программисту необходимо знать специальный язык определения интерфейса ( IDL ) для описания функций, которые допускают удаленный вызов. Для устранения этих недостатков и была разработана технология </c><bookmark type="start" name="keyword8" xid="651"/><bookmark type="end" name="keyword8" xid="652"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">RMI.</c></p>
<p style="Основной текст" xid="653" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="keyword9" xid="654"/><bookmark type="start" name="id_19" xid="655"/><bookmark type="end" name="keyword9" xid="656"/><bookmark type="end" name="id_19" xid="657"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">RMI представляет собой реализацию RPC на Java для распределенных коммуникационных взаимодействий "</c><bookmark type="start" name="keyword10" xid="658"/><bookmark type="end" name="keyword10" xid="659"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">Java</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">-</c><bookmark type="start" name="keyword11" xid="660"/><bookmark type="end" name="keyword11" xid="661"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">объект</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> - Java -</c><bookmark type="start" name="keyword12" xid="662"/><bookmark type="end" name="keyword12" xid="663"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">объект</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">". </c><bookmark type="start" name="keyword13" xid="664"/><bookmark type="end" name="keyword13" xid="665"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Объект Java регистрируется для удаленного доступа, что дает возможность клиентам получать удаленную ссылку на этот </c><bookmark type="start" name="keyword142" xid="666"/><bookmark type="end" name="keyword142" xid="667"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">объект</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">. </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Она позволяет использовать этот </c><bookmark type="start" name="keyword15" xid="668"/><bookmark type="end" name="keyword15" xid="669"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">объект дистанционно. </c><bookmark type="start" name="keyword16" xid="670"/><bookmark type="end" name="keyword16" xid="671"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Синтаксис вызова метода идентичен синтаксису вызова методов других объектов в той же программе. </c><bookmark type="start" name="keyword17" xid="672"/><bookmark type="end" name="keyword17" xid="673"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">RMI</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> обслуживает маршалинг данных через </c><bookmark type="start" name="keyword18" xid="674"/><bookmark type="end" name="keyword18" xid="675"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">сеть и дает возможность программам на Java передавать законченные объекты Java с помощью механизма </c><bookmark type="start" name="keyword19" xid="676"/><bookmark type="end" name="keyword19" xid="677"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">сериализации объектов</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> Java. В составе </c><bookmark type="start" name="keyword20" xid="678"/><bookmark type="end" name="keyword20" xid="679"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">J2SE имеются инструментальные средства создания требуемого кода для сетевых взаимодействий из определенных интерфейсов программы. Это означает, что </c><bookmark type="start" name="keyword21" xid="680"/><bookmark type="end" name="keyword21" xid="681"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">RMI не требует от программиста знания языка IDL. Кроме того, никакого нейтрального к языку IDL интерфейса не требуется, так как</c><bookmark type="start" name="keyword221" xid="682"/><bookmark type="end" name="keyword221" xid="683"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> RMI поддерживает только Java, достаточно собственных интерфейсов Java.</c></p>
<p style="Основной текст" xid="684" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_38" xid="685"/><bookmark type="end" name="id_38" xid="686"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	В примере выполняются четыре основных действия:</c></p>
<p level="1" listid="1004" parentid="0" style="Основной текст" xid="687" props="widows:0; list-style:Bullet List; orphans:0; tabstops:0.0000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:NULL"><field type="list_label" xid="688" props="text-decoration:none"></field><bookmark type="start" name="id_39" xid="689"/><bookmark type="end" name="id_39" xid="690"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">определение удаленного интерфейса с объявлениями методов, которые клиент может вызвать у удаленного объекта;</c></p>
<p level="1" listid="1004" parentid="0" style="Основной текст" xid="691" props="widows:0; list-style:Bullet List; orphans:0; tabstops:0.0000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:NULL"><field type="list_label" xid="692" props="text-decoration:none"></field><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">определение реализации удаленного объекта для удаленного интерфейса;</c></p>
<p level="1" listid="1004" parentid="0" style="Основной текст" xid="693" props="widows:0; list-style:Bullet List; orphans:0; tabstops:0.0000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:NULL"><field type="list_label" xid="694" props="text-decoration:none"></field><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">определение клиентского приложения, которое использует удаленную ссылку, чтобы взаимодействовать с</c><bookmark type="start" name="keyword241" xid="695"/><bookmark type="end" name="keyword241" xid="696"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">реализацией интерфейса</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">;</c></p>
<p level="1" listid="1004" parentid="0" style="Основной текст" xid="697" props="widows:0; list-style:Bullet List; orphans:0; tabstops:0.0000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:NULL"><field type="list_label" xid="698" props="text-decoration:none"></field><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">компиляция и выполнение удаленного объекта и клиента.</c></p>
<p style="Основной текст" xid="699" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Пример представляет собой систему, функционально состоящую из двух компонентов - сервера (процессингового центра) и клиента (касса). Будем предполагать, что сервер в системе один (именно он обладает всей информацией о зарегистрированных картах и их балансах), а касс много и на них проходят операции регистрации новых карт, а также операции изменения баланса карт (соответственно - оплаты и занесения наличных).</c></p>
<p style="Основной текст" xid="700" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="701" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-weight:bold; font-family:Times New Roman; font-size:14pt; font-style:italic">3.1. Определение удаленного интерфейса</c></p>
<p style="Основной текст" xid="702" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="703" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	При проектировании сервера необходимо определить выполняемые им функции и, соответственно, методы, которые будет вызывать клиент. Поскольку операциями рассматриваемой системы являются регистрация новой карты, занесение денег на карту, оплата картой покупки и просмотр баланса карты, будем считать, что сервер будет обладать четырьмя перечисленными методами. Идентификатором карты будет служить ее номер (код), и поэтому будет присутствовать во всех методах сервера в качестве параметра. Поскольку этот код алфавитно-цифровой, для его хранения используется тип данных </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">String</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">.</c></p>
<p style="Основной текст" xid="704" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_51" xid="705"/><bookmark type="end" name="id_51" xid="706"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Удаленные методы, посредством которых клиент взаимодействует с удаленным объектом, используя </c><bookmark type="start" name="keyword251" xid="707"/><bookmark type="end" name="keyword251" xid="708"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">RMI, должны быть определены в удаленном интерфейсе. Соответственно, первый этап при создании распределенного приложения с помощью </c><bookmark type="start" name="keyword26" xid="709"/><bookmark type="end" name="keyword26" xid="710"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">RMI состоит в определении удаленного интерфейса, который описывает эти удаленные методы. Чтобы создать удаленный интерфейс, необходимо определить интерфейс, который будет расширять интерфейс </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">java.rmi.Remote</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">. Интерфейс </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">Remote </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">представляет собой тегирующий интерфейс. Он не объявляет каких-либо методов, поэтому не обременен реализацией класса. Распределенное </c><bookmark type="start" name="keyword27" xid="711"/><bookmark type="end" name="keyword27" xid="712"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">RMI-приложение должно экспортировать объект класса, который реализует интерфейс </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">Remote</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">, чтобы сделать этот удаленный объект доступным для приема удаленных вызовов метода из любой виртуальной машины Java, которая имеет соединение с компьютером, где выполняется удаленный объект.</c></p>
<p style="Основной текст" xid="713" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_56" xid="714"/><bookmark type="end" name="id_56" xid="715"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Интерфейс </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingService</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">, который расширяет интерфейс </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">Remote </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">(строка 9), представляет собой интерфейс удаленного объекта (сервера). В строках 10-17 объявляются методы для работы с пластиковыми картами. Удаленный объект должен реализовать все объявленные в удаленном интерфейсе методы.</c></p>
<p xid="716"></p>
</section>
<section xid="717" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="718"></p>
<p style="Основной текст" xid="719" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="720"></p>
</section>
<section xid="721" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="722"></p>
<p style="Текст в заданном формате" xid="723" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">1  // BillingService.java</c></p>
<p style="Текст в заданном формате" xid="724" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">2  // Интерфейс BillingService объявляет методы для работы</c></p>
<p style="Текст в заданном формате" xid="725" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">3  // с пластиковыми картами</c></p>
<p style="Текст в заданном формате" xid="726" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">4  </c></p>
<p style="Текст в заданном формате" xid="727" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">5</c></p>
<p style="Текст в заданном формате" xid="728" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">6  // Набор базовых пакетов Java</c></p>
<p style="Текст в заданном формате" xid="729" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  import java.rmi.*;</c></p>
<p style="Текст в заданном формате" xid="730" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Текст в заданном формате" xid="731" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public interface BillingService extends Remote {</c></p>
<p style="Текст в заданном формате" xid="732" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  // </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">определение</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">новой</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">карты</c></p>
<p style="Текст в заданном формате" xid="733" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public void addNewCard(String personName, String card) throws RemoteException;</c></p>
<p style="Текст в заданном формате" xid="734" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  // </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">добавить</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">денежные</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">средства</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">на</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">карту</c></p>
<p style="Текст в заданном формате" xid="735" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public void addMoney(String card, double money) throws RemoteException;</c></p>
<p style="Текст в заданном формате" xid="736" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  // </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">снять</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">денежные</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">средства</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">с</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">карты</c></p>
<p style="Текст в заданном формате" xid="737" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public void subMoney(String card, double money) throws RemoteException;</c></p>
<p style="Текст в заданном формате" xid="738" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  // </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">получение</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">баланса</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">карты</c></p>
<p style="Текст в заданном формате" xid="739" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  public double getCardBalance(String card) throws RemoteException;</c></p>
<p style="Текст в заданном формате" xid="740" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">}</c></p>
<p style="Основной текст" xid="741" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Листинг 9. Интерфейс BillingService</c></p>
<p xid="742"></p>
</section>
<section xid="743" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="744"></p>
<p style="Основной текст" xid="745" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="746"></p>
</section>
<section xid="747" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="748"></p>
<p style="Основной текст" xid="749" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_59" xid="750"/><bookmark type="end" name="id_59" xid="751"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Когда узлы взаимодействуют между собой по сети, есть вероятность возникновения проблем при таких взаимодействиях. Например, компьютер сервера может выйти из строя или может отказать какой-либо сетевой ресурс. Поэтому для контроля подобных проблем взаимодействия в сети каждый метод в интерфейсе </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">Remote </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">должен содержать throws для указания, что метод может возбуждать контролируемые исключения </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">RemoteException</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">.</c></p>
<p style="Основной текст" xid="752" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_61" xid="753"/><bookmark type="start" name="keyword28" xid="754"/><bookmark type="end" name="id_61" xid="755"/><bookmark type="end" name="keyword28" xid="756"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">RMI использует механизм </c><bookmark type="start" name="keyword29" xid="757"/><bookmark type="end" name="keyword29" xid="758"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">сериализации</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> по умолчанию Java для передачи параметров методу и возврата значений через сеть. В связи с этим все параметры метода и возвращаемые значения должны иметь описатель </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">Serializable </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">или один из </c><bookmark type="start" name="keyword301" xid="759"/><bookmark type="end" name="keyword301" xid="760"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">примитивных типов.</c></p>
<p style="Основной текст" xid="761" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="762" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-weight:bold; font-family:Times New Roman; font-size:14pt; font-style:italic">3.2. Реализация удаленного интерфейса</c></p>
<p xid="763"></p>
</section>
<section xid="764" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="765"></p>
<p style="Основной текст" xid="766" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="767"></p>
</section>
<section xid="768" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="769"></p>
<p style="Основной текст" xid="770" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_65" xid="771"/><bookmark type="end" name="id_65" xid="772"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Следующим этапом является определение реализации удаленного объекта. В данном случае класс реализации удаленного объекта имеет то же имя, что и удаленный интерфейс, но заканчивается на </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">Impl</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">.</c></p>
<p style="Основной текст" xid="773" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_67" xid="774"/><bookmark type="end" name="id_67" xid="775"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Класс </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">UnicastRemoteObject </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">(пакет </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">java.</c><bookmark type="start" name="keyword311" xid="776"/><bookmark type="end" name="keyword311" xid="777"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">rmi.server</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> ) представляет базовые функциональные возможности, которые необходимы удаленным объектам для обслуживания удаленных запросов.</c></p>
<p style="Основной текст" xid="778" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_69" xid="779"/><bookmark type="end" name="id_69" xid="780"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Конструкторы и методы класса </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">UnicastRemoteObject </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">возбуждают контролируемое исключение </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">RemoteException</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">,поэтому подклассы класса </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">UnicastRemoteObject </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">должны определять конструкторы, которые также возбуждают исключение </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">RemoteException</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">.</c></p>
<p style="Основной текст" xid="781" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_70" xid="782"/><bookmark type="end" name="id_70" xid="783"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Конструктор класса </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">UnicastRemoteObject </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">экспортирует объект, чтобы сделать его доступным для приема удаленных вызовов. Экспорт объекта дает возможность удаленному объекту ожидать соединений с клиентами на анонимном порте (т.е. порте, выбираемом компьютером, на котором выполняется удаленный объект). Это дает возможность объекту осуществлять однонаправленное взаимодействие (взаимодействие "точка-точка" между двумя объектами посредством вызовов методов) с использованием стандартных соединений через сокеты. Классам удаленных объектов не нужно расширять этот класс, если эти классы применяют статический метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">exportObject</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> класса </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">UnicastRemoteObject </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">для экспорта удаленных объектов. Предполагается, что клиенты </c><bookmark type="start" name="keyword321" xid="784"/><bookmark type="end" name="keyword321" xid="785"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">RMI должны осуществлять соединение на порте 1099 при попытке найти удаленный объект в реестре </c><bookmark type="start" name="keyword331" xid="786"/><bookmark type="end" name="keyword331" xid="787"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">RMI. Перегруженный конструктор для класса </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">UnicastRemoteObject </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">дает возможность задавать дополнительную информацию, такую как номер порта для экспорта удаленного объекта. Для этого необходимо определить URL, который клиент может использовать для получения удаленной ссылки на объект. Эта ссылка применяется для вызова методов удаленного объекта. URL обычно имеет форму:</c></p>
<p xid="788"></p>
</section>
<section xid="789" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="790"></p>
<p style="Основной текст" xid="791" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="792"></p>
</section>
<section xid="793" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="794"></p>
<p style="Текст в заданном формате" xid="795" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Ubuntu">rmi://хост:порт/ИмяУдаленногоОбъекта,</c></p>
<p xid="796"></p>
</section>
<section xid="797" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="798"></p>
<p style="Основной текст" xid="799" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="800"></p>
</section>
<section xid="801" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="802"></p>
<p style="Основной текст" xid="803" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_79" xid="804"/><bookmark type="end" name="id_79" xid="805"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">где </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">хост </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">представляет собой имя компьютера, который выполняет сервер реестра (</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">rmiregistry</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">) для удаленных объектов (он также является компьютером, на котором выполняется удаленный объект), порт представляет собой номер порта, на котором выполняется сервер реестра на хост-компьютере, а </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">ИмяУдаленногоОбъекта </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">- имя, которое клиент будет предоставлять при попытках обнаружить удаленный объект в реестре. Утилита </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">rmi-registry </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">обслуживает реестр удаленных объектов и является составной частью </c><bookmark type="start" name="keyword341" xid="806"/><bookmark type="end" name="keyword341" xid="807"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">J2SE</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">. Номер порта реестра </c><bookmark type="start" name="keyword351" xid="808"/><bookmark type="end" name="keyword351" xid="809"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">RMI</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> по умолчанию - 1099.</c></p>
<p style="Основной текст" xid="810" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_831" xid="811"/><bookmark type="end" name="id_831" xid="812"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Для связывания удаленного объекта с реестром используются методы </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">bind</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">или </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">rebind</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">. Метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">rebind</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">гарантирует, что если объект уже был зарегистрирован под заданным именем, новый удаленный объект заменит ранее зарегистрированный объект. Это может быть важно, если регистрируется новая версия существующего удаленного объекта.</c></p>
<p style="Основной текст" xid="813" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_841" xid="814"/><bookmark type="end" name="id_841" xid="815"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Класс </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingServiceImpl </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">представляет собой удаленный объект, который реализует удаленный интерфейс </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingService</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">. Клиент взаимодействует с объектом класса </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingServiceImpl</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">, вызывая методы </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">addNewCard</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">, </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">addMoney, subMoney, getCardBalance</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">интерфейса </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingService </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">для обработки информации по пластиковым картам. Класс </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingServiceImpl </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">хранит сведения о картах в </c><bookmark type="start" name="keyword361" xid="816"/><bookmark type="end" name="keyword361" xid="817"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">хэш-таблице </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">(Hashtable)</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">, содержащей баланс пластиковой карты с именем посетителя </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">(personName) </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">и номером пластиковой карты, где номер карты является ключом таблицы.</c></p>
<p xid="818"></p>
</section>
<section xid="819" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="820"></p>
<p style="Основной текст" xid="821" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="822"></p>
</section>
<section xid="823" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="824"></p>
<p style="Текст в заданном формате" xid="825" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">1  // BillingServicelmpl.java</c></p>
<p style="Текст в заданном формате" xid="826" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">2  // BillingServiceImpl </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">реализует</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">удаленный</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">интерфейс</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> BillingService</c></p>
<p style="Текст в заданном формате" xid="827" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">  </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">для</c></p>
<p style="Текст в заданном формате" xid="828" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">3  // предоставления удаленного объекта BillingService</c></p>
<p style="Текст в заданном формате" xid="829" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">4  </c></p>
<p style="Текст в заданном формате" xid="830" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">5</c></p>
<p style="Текст в заданном формате" xid="831" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">6  // Набор базовых пакетов Java</c></p>
<p style="Текст в заданном формате" xid="832" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">7  import java.rmi.*;</c></p>
<p style="Текст в заданном формате" xid="833" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">8  import java.util.*;</c></p>
<p style="Текст в заданном формате" xid="834" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">9  import java.rmi.server.*; </c></p>
<p style="Текст в заданном формате" xid="835" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">10</c></p>
<p style="Текст в заданном формате" xid="836" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">11  public class BillingServiceImpl extends UnicastRemoteObject</c></p>
<p style="Текст в заданном формате" xid="837" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">12  implements BillingService {</c></p>
<p style="Текст в заданном формате" xid="838" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">13</c></p>
<p style="Текст в заданном формате" xid="839" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">14  private   Hashtable hash;   // хэш-таблица для хранения карт</c></p>
<p style="Текст в заданном формате" xid="840" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">15  // </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">инициализация</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">сервера</c></p>
<p style="Текст в заданном формате" xid="841" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">16  public BillingServiceImpl() throws RemoteException{</c></p>
<p style="Текст в заданном формате" xid="842" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">17  super();</c></p>
<p style="Текст в заданном формате" xid="843" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">18  hash = new Hashtable();</c></p>
<p style="Текст в заданном формате" xid="844" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">19  }</c></p>
<p style="Текст в заданном формате" xid="845" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">20</c></p>
<p style="Текст в заданном формате" xid="846" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">21  // </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">реализация</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">метода</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> addNewCard </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">интерфейса</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> BillingService</c></p>
<p style="Текст в заданном формате" xid="847" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">22  public void addNewCard(String personName, String card)</c></p>
<p style="Текст в заданном формате" xid="848" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">23  throws RemoteException {</c></p>
<p style="Текст в заданном формате" xid="849" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">24</c></p>
<p style="Текст в заданном формате" xid="850" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">25  hash.put(card, new Double(0.0));</c></p>
<p style="Текст в заданном формате" xid="851" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">26  }</c></p>
<p style="Текст в заданном формате" xid="852" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">27</c></p>
<p style="Текст в заданном формате" xid="853" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">28  // </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">реализация</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">метода</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> addMoney </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">интерфейса</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> BillingService</c></p>
<p style="Текст в заданном формате" xid="854" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">29  public void addMoney(String card, double money) throws RemoteException {</c></p>
<p style="Текст в заданном формате" xid="855" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">30  Double d = (Double)hash.get(card);</c></p>
<p style="Текст в заданном формате" xid="856" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">31</c></p>
<p style="Текст в заданном формате" xid="857" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">32  if (d!=null) hash.put(card,new Double(d.doubleValue()+money));</c></p>
<p style="Текст в заданном формате" xid="858" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">33  else throw new NotExistsCardOperation();</c></p>
<p style="Текст в заданном формате" xid="859" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">34  }</c></p>
<p style="Текст в заданном формате" xid="860" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">35</c></p>
<p style="Текст в заданном формате" xid="861" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">36  // </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">реализация</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">метода</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> subMoney </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">интерфейса</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> BillingService</c></p>
<p style="Текст в заданном формате" xid="862" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">37  public void subMoney(String card, double money) throws RemoteException {</c></p>
<p style="Текст в заданном формате" xid="863" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">38  Double d = (Double)hash.get(card);</c></p>
<p style="Текст в заданном формате" xid="864" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">39</c></p>
<p style="Текст в заданном формате" xid="865" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">40  if (d!=null) hash.put(card,new Double(d.doubleValue()-money));</c></p>
<p style="Текст в заданном формате" xid="866" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">41  else throw new NotExistsCardOperation();</c></p>
<p style="Текст в заданном формате" xid="867" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">42  }</c></p>
<p style="Текст в заданном формате" xid="868" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">43</c></p>
<p style="Текст в заданном формате" xid="869" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">44  // </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">реализация</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">метода</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> getCardBalance </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">интерфейса</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> BillingService</c></p>
<p style="Текст в заданном формате" xid="870" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">45  public double getCardBalance(String card) throws RemoteException {</c></p>
<p style="Текст в заданном формате" xid="871" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">46  Double d = (Double)hash.get(card);</c></p>
<p style="Текст в заданном формате" xid="872" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">47  if (d!=null) return d.doubleValue();</c></p>
<p style="Текст в заданном формате" xid="873" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">48  else throw new NotExistsCardOperation();</c></p>
<p style="Текст в заданном формате" xid="874" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">49  };</c></p>
<p style="Текст в заданном формате" xid="875" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">50</c></p>
<p style="Текст в заданном формате" xid="876" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">51  // </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">запуск</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">удаленного</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">объекта</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> BillingService</c></p>
<p style="Текст в заданном формате" xid="877" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">52  public static void main (String[] args) throws Exception {</c></p>
<p style="Текст в заданном формате" xid="878" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">53  System.out.println("Initializing BillingService...");</c></p>
<p style="Текст в заданном формате" xid="879" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">54</c></p>
<p style="Текст в заданном формате" xid="880" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">55  // </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">создание</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">удаленного</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">объекта</c></p>
<p style="Текст в заданном формате" xid="881" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">56  BillingService service = new BillingServiceImpl();</c></p>
<p style="Текст в заданном формате" xid="882" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">57</c></p>
<p style="Текст в заданном формате" xid="883" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">58  //</c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">задание</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">имени</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">удаленного</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">объекта</c></p>
<p style="Текст в заданном формате" xid="884" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">59  String serviceName = "rmi://localhost/BillingService";</c></p>
<p style="Текст в заданном формате" xid="885" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">60  // регистрация удаленного объекта BillingService в реестре rmiregistry</c></p>
<p style="Текст в заданном формате" xid="886" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">61  Naming.rebind(serviceName, service);</c></p>
<p style="Текст в заданном формате" xid="887" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">62  }</c></p>
<p style="Текст в заданном формате" xid="888" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">63</c></p>
<p style="Текст в заданном формате" xid="889" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">64  }</c></p>
<p style="Основной текст" xid="890" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Листинг</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> 10. </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Класс</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> BillingServiceImpl </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">реализует</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">удаленный</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">интерфейс</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> BillingService</c></p>
<p xid="891"></p>
</section>
<section xid="892" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="893"></p>
<p style="Основной текст" xid="894" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="895"></p>
</section>
<section xid="896" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="897"></p>
<p style="Основной текст" xid="898" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_88" xid="899"/><bookmark type="end" name="id_88" xid="900"/><c props="lang:en-US; font-size:14pt; font-family:Times New Roman">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Класс</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> </c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingServiceImpl </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">реализует</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">методы</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> </c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; font-style:italic">addNewCard</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman">(</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">строки</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> 22-26), </c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; font-style:italic">addMoney</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman">(</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">строки</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> 29-34), </c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; font-style:italic">subMoney</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman">(</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">строки</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> 37-42), </c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; font-style:italic">getCardBalance</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman">(</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">строки</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> 45-49) </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">интерфейса</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> </c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingService</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman">, </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">чтобы</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">отвечать</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">на</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">удаленные</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">запросы</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman">.</c></p>
<p style="Основной текст" xid="901" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_89" xid="902"/><bookmark type="end" name="id_89" xid="903"/><c props="lang:en-US; font-size:14pt; font-family:Times New Roman">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">main</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">(строки 52-62) создает удаленный объект </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingServiceImpl</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">. Когда конструктор выполняется, он экспортирует удаленный объект, чтобы прослушивать удаленные запросы. В строке 59 определяется URL, который клиент может применить для получения удаленной ссылки на объект для вызова методов удаленного объекта.</c></p>
<p style="Основной текст" xid="904" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_91" xid="905"/><bookmark type="end" name="id_91" xid="906"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	В этой программе URL удаленного объекта имеет вид: </c><a xlink:href="rmi://localhost/BillingService" xid="907"><c props="lang:ru-RU; font-size:12pt; font-family:Times New Roman">rmi://localhost/BillingService</c></a><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">. Из этого следует, что реестр </c><bookmark type="start" name="keyword371" xid="909"/><bookmark type="end" name="keyword371" xid="910"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">RMI </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">выполняется на машине </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">localhost </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">(т.е. на локальном компьютере), а для обнаружения клиентом сервиса нужно использовать имя </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">BillingService</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">. Имя </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">localhost </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">является синонимом IP-адреса 127.0.0.1.</c></p>
<p style="Основной текст" xid="911" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_97" xid="912"/><bookmark type="end" name="id_97" xid="913"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	В строке 61 вызывается статический метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">rebind</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">класса </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">Naming </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">(пакет </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">java.rmi</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">) </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">для связывания удаленного объекта service класса </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingServiceImpl </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">в реестре </c><bookmark type="start" name="keyword39" xid="914"/><bookmark type="end" name="keyword39" xid="915"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">RMI</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> с URL </c><a xlink:href="rmi://localhost/BillingService" xid="916"><c props="lang:ru-RU; font-size:12pt; font-family:Times New Roman">rmi://localhost/BillingService</c></a><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">.</c></p>
<p style="Основной текст" xid="918" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_101" xid="919"/><bookmark type="end" name="id_101" xid="920"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Класс</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> </c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; font-weight:bold">NotExistsCardOperation </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">расширяет</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">класс</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman"> </c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman; font-weight:bold">RemoteException</c><c props="lang:en-US; font-size:14pt; font-family:Times New Roman">.</c></p>
<p xid="921"></p>
</section>
<section xid="922" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="923"></p>
<p style="Основной текст" xid="924" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="925"></p>
</section>
<section xid="926" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="927"></p>
<p style="Текст в заданном формате" xid="928" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">1  // NotExistsCardOperation.java</c></p>
<p style="Текст в заданном формате" xid="929" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">2  </c></p>
<p style="Текст в заданном формате" xid="930" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">3</c></p>
<p style="Текст в заданном формате" xid="931" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">4  // </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">Набор</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">базовых</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">пакетов</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> Java</c></p>
<p style="Текст в заданном формате" xid="932" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">5  import java.rmi.RemoteException;</c></p>
<p style="Текст в заданном формате" xid="933" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">6</c></p>
<p style="Текст в заданном формате" xid="934" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">7  public class NotExistsCardOperation extends RemoteException {</c></p>
<p style="Текст в заданном формате" xid="935" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">8</c></p>
<p style="Текст в заданном формате" xid="936" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">9  }</c></p>
<p style="Основной текст" xid="937" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Листинг 11. Класс NotExistsCardOperation реализует обработку исключений</c></p>
<p xid="938"></p>
</section>
<section xid="939" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="940"></p>
<p style="Основной текст" xid="941" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_1041" xid="942"/><bookmark type="end" name="id_1041" xid="943"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Далее определяется клиентское приложение, которое будет обрабатывать запросы к пластиковым картам и пересылать их серверу. Для работы клиентского приложения необходимо знать URL вызываемого им удаленного объекта. Статический метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">lookup</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">класса </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">Naming </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">применяется для получения объектной ссылки на удаленный объект с заданным URL. Метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">lookup</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">осуществляет соединение с реестром </c><bookmark type="start" name="keyword40" xid="944"/><bookmark type="end" name="keyword40" xid="945"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">RMI</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> и возвращает удаленную ссылку на удаленный объект. Клиент может использовать эту удаленную ссылку, если она обращается к локальному объекту, выполняющемуся на той же виртуальной машине. Эта удаленная ссылка обращается к </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">объекту-заглушке </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">на клиенте. Заглушки дают возможность клиентам вызывать методы удаленного объекта. Объекты-заглушки принимают удаленные вызовы метода и передают эти вызовы </c><bookmark type="start" name="keyword411" xid="946"/><bookmark type="end" name="keyword411" xid="947"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">RMI</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">, который выполняет сетевые соединения, позволяющие клиентам взаимодействовать с удаленным объектом. Уровень </c><bookmark type="start" name="keyword42" xid="948"/><bookmark type="end" name="keyword42" xid="949"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">RMI</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> отвечает за сетевые соединения с удаленными объектами, поэтому обращения к удаленным объектам являются прозрачными для пользователя. </c><bookmark type="start" name="keyword43" xid="950"/><bookmark type="end" name="keyword43" xid="951"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">RMI</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> обслуживает соединение с удаленным объектом, передачу параметров и возврат значений.</c></p>
<p xid="952"></p>
</section>
<section xid="953" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="954"></p>
<p style="Основной текст" xid="955" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<frame strux-image-dataid="0" xid="956" props="frame-col-ypos:0,095833in; bot-style:none; xpos:0,787500in; wrap-mode:wrapped-both; frame-type:image; ypos:0,095833in; top-style:none; frame-height:3,546528in; frame-pref-page:19; left-style:none; position-to:block-above-text; frame-col-xpos:0,787500in; right-style:none; frame-width:5,117361in">
</frame><p xid="957"></p>
</section>
<section xid="958" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="959"></p>
<p style="Основной текст" xid="960" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="image.5.1" xid="961"/><bookmark type="end" name="image.5.1" xid="962"/></p>
<p style="Основной текст" xid="963" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"><br/></c></p>
<p style="Основной текст" xid="964" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="965" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="966" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="967" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="968" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="969" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="970" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="971" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Рис. 1. Архитектура RMI</c></p>
<p xid="972"></p>
</section>
<section xid="973" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="974"></p>
<p style="Основной текст" xid="975" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="976"></p>
</section>
<section xid="977" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="978"></p>
<p style="Основной текст" xid="979" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_112" xid="980"/><bookmark type="end" name="id_112" xid="981"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Класс </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingClient </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">является клиентским приложением, которое вызывает удаленные методы </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">addNewCard,</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">addMoney</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">и </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">getCardBalance</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">интерфейса </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingService </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">для работы с пластиковыми картами посетителей через </c><bookmark type="start" name="keyword44" xid="982"/><bookmark type="end" name="keyword44" xid="983"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">RMI</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">. Для иллюстрации определения и работы клиентского приложения достаточно произвести несколько операций с несколькими картами, используя удаленные методы удаленного объекта. В данном случае клиент в цикле заносит денежные средства на три пластиковые карты и в конце печатает результирующий баланс по этим пластиковым картам. При первом проходе цикла в случае отсутствия карт с заданными номерами клиент их создает.</c></p>
<p xid="984"></p>
</section>
<section xid="985" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="986"></p>
<p style="Основной текст" xid="987" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="988"></p>
</section>
<section xid="989" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="990"></p>
<p style="Текст в заданном формате" xid="991" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">1  // BillingClient.java</c></p>
<p style="Текст в заданном формате" xid="992" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">2  // BillingClient использует удаленный объект BillingService для</c></p>
<p style="Текст в заданном формате" xid="993" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">3  // работы с информацией на пластиковых картах</c></p>
<p style="Текст в заданном формате" xid="994" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">4  </c></p>
<p style="Текст в заданном формате" xid="995" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">5</c></p>
<p style="Текст в заданном формате" xid="996" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">6  // Набор базовых пакетов Java</c></p>
<p style="Текст в заданном формате" xid="997" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">7  import java.rmi.*;</c></p>
<p style="Текст в заданном формате" xid="998" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">8</c></p>
<p style="Текст в заданном формате" xid="999" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">9  public class BillingClient {</c></p>
<p style="Текст в заданном формате" xid="1000" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">10  // </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">выполнение</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> BillingClient</c></p>
<p style="Текст в заданном формате" xid="1001" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">11  public static void main(String[] args) throws Exception]</c></p>
<p style="Текст в заданном формате" xid="1002" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">12  // создание строки, содержащей URL удаленного объекта</c></p>
<p style="Текст в заданном формате" xid="1003" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">13  String objectName = "rmi://"+”localhoct”+"/BillingService";</c></p>
<p style="Текст в заданном формате" xid="1004" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">14  System.out.println("Starting...\n");</c></p>
<p style="Текст в заданном формате" xid="1005" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">15  // соединение с реестром RMI и получение удаленной ссылки</c></p>
<p style="Текст в заданном формате" xid="1006" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">16  // </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">на</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">удаленный</c><c props="lang:en-US; font-size:10pt; font-family:Ubuntu"> </c><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">объект</c></p>
<p style="Текст в заданном формате" xid="1007" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">17  BillingService bs = (BillingService)Naming.lookup(objectName);</c></p>
<p style="Текст в заданном формате" xid="1008" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">18  System.out.println("done");</c></p>
<p style="Текст в заданном формате" xid="1009" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">19</c></p>
<p style="Текст в заданном формате" xid="1010" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">20  // начисление денежных средств на пластиковые карты</c></p>
<p style="Текст в заданном формате" xid="1011" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">21  for (int i = 0; i &lt; 10000;  i++) {</c></p>
<p style="Текст в заданном формате" xid="1012" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">22  try {</c></p>
<p style="Текст в заданном формате" xid="1013" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">23  bs.addMoney("1", 1);</c></p>
<p style="Текст в заданном формате" xid="1014" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">24  } catch (RemoteException   e) {</c></p>
<p style="Текст в заданном формате" xid="1015" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">25  bs.addNewCard("Piter", "1");</c></p>
<p style="Текст в заданном формате" xid="1016" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">26  } </c></p>
<p style="Текст в заданном формате" xid="1017" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">27</c></p>
<p style="Текст в заданном формате" xid="1018" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">28  try {</c></p>
<p style="Текст в заданном формате" xid="1019" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">29  bs.addMoney("2", 1);</c></p>
<p style="Текст в заданном формате" xid="1020" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">30  } catch (RemoteException   e) {</c></p>
<p style="Текст в заданном формате" xid="1021" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">31  bs.addNewCard("Stefan", "2");</c></p>
<p style="Текст в заданном формате" xid="1022" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">32  } </c></p>
<p style="Текст в заданном формате" xid="1023" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">33</c></p>
<p style="Текст в заданном формате" xid="1024" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">34  try {</c></p>
<p style="Текст в заданном формате" xid="1025" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">35  bs.addMoney("3", 1);</c></p>
<p style="Текст в заданном формате" xid="1026" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">36  } catch (RemoteException   e) {</c></p>
<p style="Текст в заданном формате" xid="1027" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">37  bs.addNewCard("Nataly", "3");</c></p>
<p style="Текст в заданном формате" xid="1028" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">38  }</c></p>
<p style="Текст в заданном формате" xid="1029" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">39  }</c></p>
<p style="Текст в заданном формате" xid="1030" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">40  // печать текущего баланса обработанных карт</c></p>
<p style="Текст в заданном формате" xid="1031" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">41  System.out.println("1:"+bs.getCardBalance("1"));</c></p>
<p style="Текст в заданном формате" xid="1032" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">42  System.out.println("2:"+bs.getCardBalance("2"));</c></p>
<p style="Текст в заданном формате" xid="1033" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-US; font-size:10pt; font-family:Ubuntu">43  System.out.println("3:"+bs.getCardBalance("3"));</c></p>
<p style="Текст в заданном формате" xid="1034" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">44  }</c></p>
<p style="Текст в заданном формате" xid="1035" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:10pt; font-family:Ubuntu">45  }</c></p>
<p style="Основной текст" xid="1036" props="text-align:center; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Листинг 12. Клиентское приложение BillingClient для удаленного объекта BillingService</c></p>
<p xid="1037"></p>
</section>
<section xid="1038" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="1039"></p>
<p style="Основной текст" xid="1040" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="1041" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="1042" props="text-align:left; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="1043"></p>
</section>
<section xid="1044" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="1045"></p>
<p style="Основной текст" xid="1046" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_1161" xid="1047"/><bookmark type="end" name="id_1161" xid="1048"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">main</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">(строки 11-44) принимает в качестве параметра имя компьютера, на котором выполняется удаленный объект </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingService</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">. В строке 13 создается строка </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">objectName</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">, которая содержит URL для нашего удаленного объекта. В строке 17 вызывается метод </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">lookup</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">класса </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">Naming </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">для получения удаленной ссылки на удаленный объект </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingService </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">с заданным URL. В строках 21-38 производится добавление денежных средств на карты, а в строках 41-43 - печать текущего баланса этих карт.</c></p>
<p style="Основной текст" xid="1049" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="1050" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-weight:bold; font-family:Times New Roman; font-size:14pt; font-style:italic">3.3. Компиляция и выполнение сервера и клиента</c></p>
<p xid="1051"></p>
</section>
<section xid="1052" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="1053"></p>
<p style="Основной текст" xid="1054" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="1055"></p>
</section>
<section xid="1056" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="1057"></p>
<p style="Основной текст" xid="1058" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; text-decoration:underline">Для начала необходимо компилировать исходные классы.</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> Далее, нужно компилировать класс удаленного объекта, используя компилятор </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">rmic </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">(утилита </c><bookmark type="start" name="keyword45" xid="1059"/><bookmark type="end" name="keyword45" xid="1060"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">J2SE</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> ) для формирования класса-заглушки. Этот класс должен быть доступен для клиента (либо локально, либо путем загрузки по сети), чтобы дать возможность устанавливать </c><bookmark type="start" name="keyword46" xid="1061"/><bookmark type="end" name="keyword46" xid="1062"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">удаленное соединение с</c><bookmark type="start" name="keyword47" xid="1063"/><bookmark type="end" name="keyword47" xid="1064"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">серверным объектом. В зависимости от </c><bookmark type="start" name="keyword48" xid="1065"/><bookmark type="end" name="keyword48" xid="1066"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">параметров командной строки, передаваемых </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">rmic</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">, может быть сгенерировано несколько файлов. В Java 1.1 </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">rmic </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">формирует два класса - класс-заглушку и класс-каркас (</c><bookmark type="start" name="keyword49" xid="1067"/><bookmark type="end" name="keyword49" xid="1068"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">skeleton</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> ). В Java 2 класс-каркас больше не требуется. Параметр командной строки указывает, что </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">rmic </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">следует создать только класс-заглушку.</c></p>
<p style="Основной текст" xid="1069" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_126" xid="1070"/><bookmark type="end" name="id_126" xid="1071"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Командная строка для компиляции класса удаленного объекта будет выглядеть следующим образом:</c></p>
<p xid="1072"></p>
</section>
<section xid="1073" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="1074"></p>
<p style="Основной текст" xid="1075" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="1076"></p>
</section>
<section xid="1077" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="1078"></p>
<p style="Текст в заданном формате" xid="1079" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="__DdeLink__2973_120708441" xid="1080"/><c props="lang:en-US; font-size:14pt; font-family:Ubuntu; text-decoration:underline">rmic -v1.2 BillingServiceImpl</c><bookmark type="end" name="__DdeLink__2973_120708441" xid="1081"/></p>
<p xid="1082"></p>
</section>
<section xid="1083" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="1084"></p>
<p style="Основной текст" xid="1085" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="1086"></p>
</section>
<section xid="1087" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="1088"></p>
<p style="Основной текст" xid="1089" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Она сгенерирует файл </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">BillingServiceImpl_Stub.class</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">. </c><bookmark type="start" name="id_129" xid="1090"/><bookmark type="end" name="id_129" xid="1091"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Следующий этап - запуск реестра </c><bookmark type="start" name="keyword501" xid="1092"/><bookmark type="end" name="keyword501" xid="1093"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">RMI</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">, который зарегистрирует удаленный объект. Командная строка</c></p>
<p xid="1094"></p>
</section>
<section xid="1095" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="1096"></p>
<p style="Основной текст" xid="1097" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="1098"></p>
</section>
<section xid="1099" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="1100"></p>
<p style="Текст в заданном формате" xid="1101" props="text-align:left; line-height:1.5; margin-left:0.1042in; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Ubuntu">rmiregistry</c></p>
<p xid="1102"></p>
</section>
<section xid="1103" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="1104"></p>
<p style="Основной текст" xid="1105" props="text-align:left; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p xid="1106"></p>
</section>
<section xid="1107" props="page-margin-right:0.7875in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.2875in; page-margin-header:0.5000in; page-margin-left:0.7875in; page-margin-top:0.7875in; page-margin-bottom:0.7875in">
<p xid="1108"></p>
<p style="Основной текст" xid="1109" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_132" xid="1110"/><bookmark type="end" name="id_132" xid="1111"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">запускает реестр </c><bookmark type="start" name="keyword511" xid="1112"/><bookmark type="end" name="keyword511" xid="1113"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">RMI</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> на локальной машине. В окне командной строки в ответ на эту команду никакого текста отображаться не будет. Типичная ошибка заключается в том, что если не запустить реестр </c><bookmark type="start" name="keyword521" xid="1114"/><bookmark type="end" name="keyword521" xid="1115"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">RMI</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> прежде чем попытаться привязать удаленный объект к реестру, будет сгенерировано исключение </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">java.rmi.ConnectException</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">, которое указывает, что программа не может соединиться с реестром.</c></p>
<p style="Основной текст" xid="1116" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_135" xid="1117"/><bookmark type="end" name="id_135" xid="1118"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Чтобы удаленный объект мог принимать удаленные вызовы методов, необходимо связать объект с именем в реестре</c><bookmark type="start" name="keyword531" xid="1119"/><bookmark type="end" name="keyword531" xid="1120"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> </c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-style:italic">RMI</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">. Для этого нужно запустить серверное приложение.</c></p>
<p style="Основной текст" xid="1121" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_1381" xid="1122"/><bookmark type="end" name="id_1381" xid="1123"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	В результате отображается сообщение об инициализации BillingService.</c><bookmark type="start" name="id_1401" xid="1124"/><bookmark type="end" name="id_1401" xid="1125"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman"> Теперь клиентское приложение может соединиться с удаленным объектом, выполняющимся на локальной машине localhost. </c></p>
<p style="Основной текст" xid="1126" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><bookmark type="start" name="id_144" xid="1127"/><bookmark type="end" name="id_144" xid="1128"/><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">	Если серверное приложение выполняется не на клиенте, можно указать IP-адрес или доменное имя компьютера-сервера в качестве параметра командной строки при выполнении клиента.</c></p>
<p style="Основной текст" xid="1129" props="text-align:justify; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Основной текст" xid="1130" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman; font-weight:bold">ЗАДАНИЕ НА ЛАБОРАТОРНУЮ РАБОТУ</c></p>
<p style="Основной текст" xid="1131" props="text-align:center; line-height:1.5; dom-dir:ltr; orphans:0; widows:0"></p>
<p level="1" listid="1005" parentid="0" style="Основной текст" xid="1132" props="widows:0; list-style:Numbered List; orphans:0; tabstops:0.5000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:Times New Roman"><field type="list_label" xid="1133" props="text-decoration:none"></field><c props="text-decoration:none">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Реализовать простое клиент-серверное приложение на языке Java.</c></p>
<p level="1" listid="1005" parentid="0" style="Основной текст" xid="1134" props="widows:0; list-style:Numbered List; orphans:0; tabstops:0.5000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:Times New Roman"><field type="list_label" xid="1135" props="text-decoration:none"></field><c props="text-decoration:none">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Реализовать распределенную систему обслуживания пластиковых карт.</c></p>
<p level="1" listid="1005" parentid="0" style="Основной текст" xid="1136" props="widows:0; list-style:Numbered List; orphans:0; tabstops:0.5000in/L; dom-dir:ltr; start-value:1; line-height:1.5; text-align:left; field-font:Times New Roman"><field type="list_label" xid="1137" props="text-decoration:none"></field><c props="text-decoration:none">	</c><c props="lang:ru-RU; font-size:14pt; font-family:Times New Roman">Реализовать распределенную систему по технологии RMI.</c></p>
<p xid="1138"></p>
</section>
<data>
<d name="0" mime-type="image/png" base64="yes">
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
c5MmTSZMmGCqevvtt5kJ4BXPW0wPjNTIkSOBvH///ueff/7uu+9uemo6fsstt8C4PPXUU9nQ
18GRH5ioTvQXFp+2e1bZDOeRS8jdGlHglrW7N7mVNaq0G2L3TDQuA1SasogSctLWFRV4KvWg
QD1QsY2SgQrdBzMjSgKohioPr4S3GDVvYRSiUq47OrFbL9EXMb4jWnVpOl7fmx7KDfjyKANq
HlTMK00uN++7YF8TMvLlP//5DzY/F1TQ+kUisiKby6UyJYNy8zFYGqO2ULZDMJbcVFRNoUCI
dJalqahwX5H8gaRlIVwNlcAo2VNySkFmsCb/Fu4rCkux1K2GSrn5GMwKlPSkKPOKxwhQgcoY
JXfddZcxaxYvXmwML4TPeFivvfbaDh06gA/GnDJ21X777ffJJ58YU8bYJd4jppUxY8ZstNFG
gqR58+a33367MVaWLVtmyhsLLJw8hx9+uJyMJahME3/6058OOuggc20sniOOOIILn3jiiddc
c41cI+FPKhGTywA7pUJ4xJhHZ5xxBh5h3gKzsoYRGGiQm2Xw4MGDBbmcwpWKXFWf7VB5q/Us
+yTCXY5RsFfRsw/gTMLUTChEypMvdiNrsDwSNxbOpiLKSyVsndQbFbgcuSev1gmVqiTH8aIq
FVVo1XGZNUflxQ3BcF4jZvMKqLzgo6ZMMlTuhYYhAmB7rQkqVBJaeF8fMoJvyJAhxRd+Clqv
KVUyqCDJlUW0cjdRQQKEsh0ihSuB2IEkUe52aVhFLGq4QoQgFMmreqPiBzNQJWQaZqBCN8Hh
2D3CKYOHQAXiXgDVlltuOWHChBEjRniuIEMbbLDBDTfcsPfe/5+9KwGbojjaPbMfh9w3CAiI
F4IICmKIB+IRRYMoICCKgHeiRpNoYi4TxUQTD4zxSIwao1FQUDEQ8CbiL95cioIaBUHuS0Dk
cGf+ypb95p3u2f324wa3Hp91mK+n553qnqrqqprqEx1U3bp1e+WVV4YMGTJjxgznEjHOHnjg
gZNPPplRHX744RMnTuzXr9/cuXOd9vLX733ve8OHDw+Tfgfp4R//+MfQoUPx1aTSIYcc8tvf
/hYmF0I3ctXgwYOffvppEaTOLc4999zLL78cJpfx/DUm+a1iQP7CLl26CPL+/fvPmTMnH3LW
8kDFsx13/DrtJpOs/KEHevvYLkGMdX5gd3djs5Q4ZyuivaJ4HsfWy+qAYNtO/xTbhIAg6dRR
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
j+tbJZmZP48bd6R9e94/4tasOeNf/8qYPTu3a9eDPXuKZGWJiUmLF5PKlbxoEc88rCqaNhHX
coTSs+2WW/YOGlQRFxd2+HDD999vOGNGyhdfSHpP2oIFGx58kGfYYOXK1k8/zfW89E8/3Xvp
pUEBO1K1imY1tWm5ULN//csICdHLahKt1/sBUpIkDAYyg8FuKrc1M/uMQ/KQ1AhmzWeUCbOL
aEkwivxRXJOMYiC76EMJFS7/dLDNB5LtGqhcKip6z0CKOqKKjo7u2bMnV7CEHF67du3XX389
Z86c++67j/+Lv+/du/f555/PtTRkMnHVgMia7rwi1eF4yNjfKFFbqLxiitGL5ke1XyFjKUOp
t//qPU0rCUf1XAd/L58Va4op4UOkXoirDQzOYSq+fgyc4Og9dndyGNTsBiFC7oiKqoBzP5qs
8NAHjSVSeJlThDDNvurCvXxTuarICyodtGkXVJgJojLBtoneUY6o/HavKQab3wb4y1PpHnmF
Uo+qZsKxVhWVYTfh8n+JuK+4m15XI2r79u1chIniXnrpJf47OtrhSp/zW4b+MKegccP4kFBd
/S+n2wa1aJoa/eZX21bvyMP3rbMqr6Y/Unjszp/2TRrw3/+Ys4ni0YsErLJeeoXf7WSA90ov
3HCQq1w9WidnxEeUlhvbcwq9fhmY8grL3/12xz2Xtb6uV+NnZ24oq6iEWuPqJGhHl+ZXtMpw
YLVQhkpSU9V/SZQ5axb/vfaxx46ecYZ4k9u9e0laWtfRo7nWRSpXfrt2iYsXH/vGNLmiltut
W/pnn2FWfDkvaQ+lycnbbr6Z6z2hR+VIFjuuu25///78gWtdPE2L555L+eqrGqtc1Sq6zinx
++8Tfvxx18iR2e+9d7zLQmlpKge3Ua8y7X42GK7I7+TliZLBbw9jpIHJioFMY/YpjEE4BnxP
qFQfL/K4MO32exdUJHWZNfvSYUmPqDi1qyJxqm7Dhg3ffPPNp59+ytWv2NjYfv369e/fn+tn
iYmJDOZNnMED8Uoy6TG7SzuB4Q+vvfbaH/7wh+HDh3/wwQcS2kDTvQF+vaRkIJMDoZLmQQbT
nKSXB2pBF1Qiw5EjR86YMePll1++6aab1A7pt86N4TxInZPZb9hDXtEWDaoE1IGl3i4+/NVD
UHwjhg1ttzNL30fuGNbeJGkPtA1E/YxYQOS3jv0b9tBQJtzwgGojosLOSg0ghceoW1QGbACj
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
FSiP1BoDPKtooIoxRvM3pfFDxCYxeslAzcABXKRBuwvlQGJFyAuSI6bleeAdlWad4jHsMagI
FWpjBuzE8WmAP/Bp4KOPPtq7d2/Pnj3Psq5Q1Oyu6EZVxFTNfshAt66U1uy3PkuoSGPzguqY
SI2LY127VnTu/KsJqrRU27VL27aN8Z+tW7X//jdk27bKP7na16QJV8UY/52dzRo29GVmmo0a
GampfA1bA1RqCxJUqRvUk3fKycnhv1NTU4Om3LVrFwtgaPnll1/omatcq1at2r17d1ZWFv+E
q3QtW7aUVC6iw4cPr1ixgvfwoqKi/fv3M3sIN0EdOnSgZ669saq9uaBog5KXouuWeK/m69Xo
6OgLL7zQUeU6fqdEmzVrxln36aef1mAuU8cp7v3h/iBJCWYXemSCkpZbuOKiUnBVSaMe3zPw
FsXMBap6les3Rnyhs23bNr4y46uBkSNHJiUl1etbrGrmmzt3Lpd9XDR7WRDXksQqh4aoCe6T
DLwKmHKZl2SgxjRkxNbAKwh9kmjwkzJBw5gEBGVeV6joQ2b5Jwl/CMGEyMjIa665hn87duzY
v/zlL8uXLx86dKgGV2sTizR7AGgNwljQDqnmZLpD438gXmmweSexopIJERGsRQutZUu59CNH
9B07KnWv7dsZf1i0SNu7l+3cyQ4eZCkpLDvbzMzkehh/YJmZRkYGn/a1rCwzNtY7KlIuNaDj
3TlPMxLqCxmuXIirJl7+1aRJE1Z1xoirXFyQ8gZq1aqV+klpael///vfn376Kaiig5uewpnB
0TnMO3kvum7p+++/57rd5ZdfflKiNl599dVTpkyp7nRGYwolpzQGSRqopikGgg5HNMkrGsUo
pqQPmSJRyXETLdwCZ73K9Vuid999V1zJUkv3zNOMCgsLDx48yFerXJjWbTAIF0JPc1RxcOOM
FknkQmRChD0Twg0wsGZr9ugJOgQ4ECPZgLh/aiZ1iwojJiBCCdVLL720adMm3goffPDBWWed
deaZZ0ou/5p9h86wO6KSRKsNrygTP0SjdeGVnpioJSUZHTseU854NUUaro3t22ds367v3avx
+Z4rYUuX+rg2lpPDdu/mvGBpaSwjw0xJ0TIyQtLTWXp6pWEsNdWXmmomJ/vj4txRnZj+edrQ
zz//zJnWtGnToCm5osBVq7/+9a/uiy6uaYWGhnKVq3///mvWrGnYsGFUVJSabObMmT/++GN0
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
TkSuQmCCAAAAAAAAAAAAAAAAAAAAAAA=
</d>
</data>
</abiword>
